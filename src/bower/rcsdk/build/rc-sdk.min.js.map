{"version":3,"sources":["webpack/universalModuleDefinition","rc-sdk.js","webpack/bootstrap a5b16182b5c083e662d6","src/lib/RCSDK.ts","src/lib/core/pubnub/PubnubMock.ts","src/lib/core/Observable.ts","src/lib/core/Utils.ts","src/lib/core/Log.ts","src/lib/core/xhr/XhrMock.ts","src/lib/core/xhr/XhrResponse.ts","src/lib/core/AjaxObserver.ts","src/lib/core/Cache.ts","src/lib/core/Context.ts","src/lib/core/Helper.ts","src/lib/core/List.ts","src/lib/core/PageVisibility.ts","src/lib/core/Platform.ts","src/lib/core/http/Request.ts","src/lib/core/http/Headers.ts","src/lib/core/http/Response.ts","src/lib/core/Subscription.ts","src/lib/core/Validator.ts","src/lib/helpers/Account.ts","src/lib/helpers/BlockedNumber.ts","src/lib/helpers/Call.ts","src/lib/helpers/Presence.ts","src/lib/helpers/Extension.ts","src/lib/helpers/Contact.ts","src/lib/helpers/ContactGroup.ts","src/lib/helpers/Conferencing.ts","src/lib/helpers/Country.ts","src/lib/helpers/Device.ts","src/lib/helpers/DeviceModel.ts","src/lib/helpers/ForwardingNumber.ts","src/lib/helpers/Language.ts","src/lib/helpers/Location.ts","src/lib/helpers/State.ts","src/lib/helpers/Message.ts","src/lib/helpers/PhoneNumber.ts","src/lib/helpers/Ringout.ts","src/lib/helpers/Service.ts","src/lib/helpers/ShippingMethod.ts","src/lib/helpers/Timezone.ts","external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}","external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}","external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}","external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}"],"names":["root","factory","exports","module","require","e","define","amd","this","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_42__","__WEBPACK_EXTERNAL_MODULE_43__","__WEBPACK_EXTERNAL_MODULE_44__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pubnubMock","xhrMock","xhrResponse","ajaxObserver","cache","context","helper","list","log","observable","pageVisibility","platform","subscription","utils","validator","accountHelper","blockedNumberHelper","callHelper","contactHelper","contactGroupHelper","conferencingHelper","countryHelper","deviceHelper","deviceModelHelper","extensionHelper","forwardingNumberHelper","languageHelper","locationHelper","messageHelper","phoneNumberHelper","presenceHelper","ringoutHelper","serviceHelper","shippingMethodHelper","stateHelper","timezoneHelper","promise","pubnub","RCSDK","options","_context","$get","injections","getCache","setPrefix","cachePrefix","getPlatform","setServer","server","setCredentials","appKey","appSecret","prototype","getContext","getAjaxObserver","getXhrResponse","getSubscription","getPageVisibility","getHelper","getObservable","getValidator","getLog","getUtils","getList","getCountryHelper","getDeviceModelHelper","getLanguageHelper","getLocationHelper","getShippingMethodHelper","getStateHelper","getTimezoneHelper","getAccountHelper","getBlockedNumberHelper","getCallHelper","getConferencingHelper","getContactHelper","getContactGroupHelper","getDeviceHelper","getExtensionHelper","getForwardingNumberHelper","getMessageHelper","getPhoneNumberHelper","getPresenceHelper","getRingoutHelper","getServiceHelper","version","url","sandbox","production","localStorage","Promise","PUBNUB","XHR","XMLHttpRequest","ActiveXObject","e1","e2","e3","e4","Error","PubnubFactory","__extends","d","b","__","constructor","hasOwnProperty","Object","create","PubnubMock","_super","crypto_obj","getPubnubReal","ready","subscribe","on","channel","message","unsubscribe","off","receiveMessage","msg","emit","Observable","init","defineProperty","value","enumerable","writable","hasListeners","event","listeners","registerOneTimeEvent","oneTimeEvents","oneTimeArguments","events","callback","_this","self","forEach","push","isOneTimeEventFired","debug","apply","getOneTimeEventArgumens","args","_i","arguments","length","result","isOneTimeEvent","setOneTimeEventFired","setOneTimeEventArgumens","some","cb","i","offAll","destroy","emitAndCallback","argumentsToArray","concat","createSingleton","Utils","hasOwn","toString","rdigit","class2type","split","name","toLowerCase","extend","targetObject","sourceObject","src","copy","copyIsArray","clone","target","deep","isFunction","isPlainObject","isArray","undefined","object","res","queryStringify","parameters","array","v","vv","encodeURIComponent","join","parseQueryString","queryString","argsParsed","arg","decodeURIComponent","indexOf","trim","pair","key","isEmail","multiple","test","isPhoneNumber","Array","slice","isDate","obj","type","isWindow","isNaN","String","nodeType","getProperty","property","reduce","part","poll","fn","interval","timeout","stopPolling","next","delay","setTimeout","clearTimeout","parseString","s","parseNumber","n","parseFloat","Log","console","warn","info","error","logDebug","logInfo","logWarnings","logErrors","addTimestamps","disableAll","enableAll","parseArguments","unshift","Date","toLocaleString","XhrMock","responses","async","method","requestHeaders","withCredentials","data","readyState","responseHeaders","status","getResponseHeader","header","setRequestHeader","getAllResponseHeaders","open","send","contentType","getRequestHeader","JSON","parse","currentResponse","find","onerror","setStatus","setResponseHeader","response","getPromise","onLoad","stringify","responseText","onload","then","bind","abort","XhrResponse","add","clear","ajax","path","AjaxObserver","beforeRequest","requestSuccess","requestError","Cache","storage","getLocalStorage","prefix","prefixKey","setItem","removeItem","getItem","item","clean","Context","singletons","stubPubnub","stubAjax","usePubnubStub","flag","useAjaxStub","getPubnub","getXHR","Helper","defaultProperty","createUrl","getId","isNew","getUri","resetAsNew","uri","parseMultipartResponse","isMultipart","filter","map","loadRequest","saveRequest","post","body","deleteRequest","syncRequest","sync","query","get","syncToken","syncType","nextPageExists","navigation","index","getIdFn","gather","merge","supplement","mergeItems","supplementIndex","updatedIDs","newItem","List","numberComparator","stringComparator","propertyExtractor","a","localeCompare","comparator","extractFn","sortBy","compareFn","item1","item2","equalsFilter","condition","containsFilter","regexpFilter","RegExp","filterConfigs","opt","filterBy","filterFn","pass","PageVisibility","change","hidden","onchange","evt","window","h","evtMap","focus","focusin","pageshow","blur","focusout","pagehide","visible","document","addEventListener","onfocusin","onfocusout","onpageshow","onpagehide","onfocus","onblur","isVisible","Platform","request","accessViolation","logoutSuccess","logoutError","authorizeSuccess","authorizeError","refreshSuccess","refreshError","apiKey","account","urlPrefix","apiVersion","accountPrefix","accessTokenTtl","refreshTokenTtl","refreshTokenTtlRemember","refreshHandicapMs","refreshDelayMs","clearCacheOnRefreshError","refreshPromise","cacheId","pollInterval","releaseTimeout","getStorage","getRequest","clearStorage","btoa","Buffer","getCredentials","credentials","atob","secret","remember","getAuthURL","apiUrl","response_type","redirect_uri","redirectUri","client_id","state","brand_id","brandId","display","prompt","addServer","parseAuthRedirectUrl","qs","reverse","error_description","authorize","access_token_ttl","refresh_token_ttl","username","grant_type","password","extension","code","reject","authCall","setCache","isPaused","now","parseInt","pause","resume","refresh","resolve","refreshPolling","authData","getAuthData","access_token","refresh_token","refreshExpireTime","logout","token","getToken","isTokenValid","getTokenType","token_type","expires_in","refresh_token_expires_in","forcedTokenType","expireTime","getTime","isAuthorized","cancelAccessToken","oldAuthData","forceAuthentication","apiCall","setOptions","setHeader","isUnauthorized","put","builtUrl","hasHttp","replace","addMethod","addToken","Request","r","xhr","observer","isLoaded","setHeaders","headers","checkOptions","hasHeader","Headers","jsonContentType","toUpperCase","getEncodedBody","isJson","isUrlEncoded","responsePromise","statusText","getHeader","isContentType","getContentType","setContentType","multipartContentType","urlencodedContentType","Response","tmp","bodySeparator","shift","json","parts","headerSeparator","checkStatus","getError","boundary","match","boundarySeparator","pop","statusInfo","stack","description","Subscription","notification","removeSuccess","removeError","renewSuccess","renewError","subscribeSuccess","subscribeError","eventFilters","expirationTime","expiresIn","deliveryMode","transportType","encryption","address","subscriberKey","secretKey","creationTime","register","isSubscribed","renew","addEvents","setEvents","getFullEventFilters","updateSubscription","subscribeAtPubnub","remove","renewHandicapMs","decrypt","encryptionKey","encryptKey","keyEncoding","keyLength","mode","notify","ssl","subscribe_key","env","connect","Validator","validate","validators","errors","isValid","field","email","phone","required","max","min","Account","BlockedNumber","extensionId","phoneNumber","Call","presence","contact","personal","active","getSessionId","sessionId","isInProgress","isAlive","availability","isInbound","direction","isOutbound","isMissed","isFindMe","action","getCallerInfo","from","to","getAllCallerInfos","formatDuration","addZero","duration","hours","Math","floor","mins","secs","alive","attachContacts","contacts","calls","callerInfos","attachToCallerInfos","checkMergeability","outboundRingOutCall","inboundCall","dateString","strict","startTime","abs","maxStartTimeDiscrepancy","combineCalls","hasSubsequent","subsequent","processCalls","processedCalls","callsToMerge","merged","secondCall","parsePresenceCalls","activeCalls","activeCall","isCallInProgress","telephonyStatus","getSignature","cleanup","mergePresenceCalls","presenceCalls","currentDate","toISOString","mergeAll","presenceAndCalls","Presence","detailed","isAvailable","presenceStatus","presences","attachToExtensions","extensions","ex","presenceCall","Extension","department","user","announcement","voicemail","departmentId","isUser","isDepartment","isAnnouncement","isVoicemail","search","toLocaleLowerCase","extensionNumber","Contact","phoneFields","faxFields","addressFields","addressSubFields","nameFields","otherFields","emailFields","groupId","getFieldValues","where","fields","asHash","getFullName","getEmails","getPhones","getFaxes","getAddresses","string","inAddresses","transformFn","found","matchWith","transformed","subField","matchAsPhone","callerInfoIndex","callerInfo","indexedCallerInfos","foundContact","foundPhone","contactPhone","startsWith","phonesOnly","faxesOnly","opts","firstName","lastName","email2","email3","ContactGroup","groupName","Conferencing","Country","Device","deviceModel","order","emergencyServiceAddress","street","city","country","zip","customerName","model","DeviceModel","device","sku","ForwardingNumber","forwardingNumber","hasFeature","feature","features","Language","Location","uniqueNPAs","stateId","onlyUniqueNPA","npa","nxx","State","countryId","Message","fax","sms","pager","isSMS","isPager","isVoiceMail","isFax","isRead","readStatus","setIsRead","getAttachmentUrl","attachments","getAttachmentContentType","getCallerInfos","conversationId","messages","shorten","text","subject","validateSMS","validatePager","PhoneNumber","tollFreeAreaCodes","lookup","reserve","date","reservedTill","unreserve","usageType","paymentType","Ringout","ringout","callStatus","isSuccess","isError","Service","isSmsEnabled","isServiceFeatureEnabledMethod","isSmsReceivingEnabled","isPresenceEnabled","isRingOutEnabled","isInternationalCallingEnabled","isDndEnabled","isFaxEnabled","isFaxReceivingEnabled","isVoicemailEnabled","isPagerEnabled","isPagerReceivingEnabled","isVoipCallingEnabled","isVideoConferencingEnabled","isSalesForceEnabled","isIntercomEnabled","isPagingEnabled","isConferencingEnabled","isFreeSoftPhoneLinesEnabled","isHipaaComplianceEnabled","isCallParkEnabled","isOnDemandCallRecordingEnabled","isEnabled","serviceFeatures","f","featureName","enabled","ShippingMethod","Timezone"],"mappings":"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","file":"rc-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"es6-promise\", \"pubnub\", \"exports\", \"exports\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RCSDK\"] = factory(require(\"es6-promise\"), require(\"pubnub\"), require(\"dom-storage\"), (function webpackLoadOptionalExternalModule() { try { return require(\"xhr2\"); } catch(e) {} }()));\n\telse\n\t\troot[\"RCSDK\"] = factory(root[\"Promise\"], root[\"PUBNUB\"], root[\"localStorage\"], root[\"XMLHttpRequest\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = __webpack_require__(2);\nvar xhrMock = __webpack_require__(6);\nvar xhrResponse = __webpack_require__(7);\nvar ajaxObserver = __webpack_require__(8);\nvar cache = __webpack_require__(9);\nvar context = __webpack_require__(10);\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar log = __webpack_require__(5);\nvar observable = __webpack_require__(3);\nvar pageVisibility = __webpack_require__(13);\nvar platform = __webpack_require__(14);\nvar subscription = __webpack_require__(18);\nvar utils = __webpack_require__(4);\nvar validator = __webpack_require__(19);\nvar accountHelper = __webpack_require__(20);\nvar blockedNumberHelper = __webpack_require__(21);\nvar callHelper = __webpack_require__(22);\nvar contactHelper = __webpack_require__(25);\nvar contactGroupHelper = __webpack_require__(26);\nvar conferencingHelper = __webpack_require__(27);\nvar countryHelper = __webpack_require__(28);\nvar deviceHelper = __webpack_require__(29);\nvar deviceModelHelper = __webpack_require__(30);\nvar extensionHelper = __webpack_require__(24);\nvar forwardingNumberHelper = __webpack_require__(31);\nvar languageHelper = __webpack_require__(32);\nvar locationHelper = __webpack_require__(33);\nvar messageHelper = __webpack_require__(35);\nvar phoneNumberHelper = __webpack_require__(36);\nvar presenceHelper = __webpack_require__(23);\nvar ringoutHelper = __webpack_require__(37);\nvar serviceHelper = __webpack_require__(38);\nvar shippingMethodHelper = __webpack_require__(39);\nvar stateHelper = __webpack_require__(34);\nvar timezoneHelper = __webpack_require__(40);\nvar promise = __webpack_require__(41);\nvar pubnub = __webpack_require__(42);\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.2';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : __webpack_require__(43)),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : (promise.Promise || promise),\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (__webpack_require__(44))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(3);\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(5);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar utils = __webpack_require__(4);\nvar log = __webpack_require__(5);\nvar xhrResponse = __webpack_require__(7); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\nvar XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(3);\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(3);\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(3);\nvar cache = __webpack_require__(9);\nvar request = __webpack_require__(15);\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = __webpack_require__(16);\nvar ajaxObserver = __webpack_require__(8);\nvar r = __webpack_require__(17);\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = __webpack_require__(16);\nvar log = __webpack_require__(5);\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = __webpack_require__(3);\nvar platform = __webpack_require__(14);\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        this.utils.poll(function (next) {\n            if (Date.now() < _this.expireTime) {\n                return next();\n            }\n            _this.renew();\n        }, Subscription.pollInterval, this.timeout);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        this.utils.stopPolling(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.expireTime = Date.now() + (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    Subscription.pollInterval = 10 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = __webpack_require__(4);\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar presence = __webpack_require__(23);\nvar contact = __webpack_require__(25);\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar subscription = __webpack_require__(18);\nvar extension = __webpack_require__(24);\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar list = __webpack_require__(12);\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar extension = __webpack_require__(24);\nvar deviceModel = __webpack_require__(30);\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar state = __webpack_require__(34);\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar country = __webpack_require__(28);\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar validator = __webpack_require__(19);\nvar subscription = __webpack_require__(18);\nvar platform = __webpack_require__(14);\nvar contact = __webpack_require__(25);\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar list = __webpack_require__(12);\nvar extension = __webpack_require__(24);\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar validator = __webpack_require__(19);\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = __webpack_require__(11);\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\nif(typeof __WEBPACK_EXTERNAL_MODULE_44__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n/***/ }\n/******/ ])\n});\n;\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a5b16182b5c083e662d6\n **/","/// <reference path=\"../typings/externals.d.ts\" />\nvar pubnubMock = require('./core/pubnub/PubnubMock');\nvar xhrMock = require('./core/xhr/XhrMock');\nvar xhrResponse = require('./core/xhr/XhrResponse');\nvar ajaxObserver = require('./core/AjaxObserver');\nvar cache = require('./core/Cache');\nvar context = require('./core/Context');\nvar helper = require('./core/Helper');\nvar list = require('./core/List');\nvar log = require('./core/Log');\nvar observable = require('./core/Observable');\nvar pageVisibility = require('./core/PageVisibility');\nvar platform = require('./core/Platform');\nvar subscription = require('./core/Subscription');\nvar utils = require('./core/Utils');\nvar validator = require('./core/Validator');\nvar accountHelper = require('./helpers/Account');\nvar blockedNumberHelper = require('./helpers/BlockedNumber');\nvar callHelper = require('./helpers/Call');\nvar contactHelper = require('./helpers/Contact');\nvar contactGroupHelper = require('./helpers/ContactGroup');\nvar conferencingHelper = require('./helpers/Conferencing');\nvar countryHelper = require('./helpers/Country');\nvar deviceHelper = require('./helpers/Device');\nvar deviceModelHelper = require('./helpers/DeviceModel');\nvar extensionHelper = require('./helpers/Extension');\nvar forwardingNumberHelper = require('./helpers/ForwardingNumber');\nvar languageHelper = require('./helpers/Language');\nvar locationHelper = require('./helpers/Location');\nvar messageHelper = require('./helpers/Message');\nvar phoneNumberHelper = require('./helpers/PhoneNumber');\nvar presenceHelper = require('./helpers/Presence');\nvar ringoutHelper = require('./helpers/Ringout');\nvar serviceHelper = require('./helpers/Service');\nvar shippingMethodHelper = require('./helpers/ShippingMethod');\nvar stateHelper = require('./helpers/State');\nvar timezoneHelper = require('./helpers/Timezone');\nvar promise = require('es6-promise');\nvar pubnub = require('pubnub');\nvar RCSDK = (function () {\n    function RCSDK(options) {\n        options = options || {};\n        this._context = context.$get(RCSDK.injections);\n        this.getCache()\n            .setPrefix(options.cachePrefix || '');\n        this.getPlatform()\n            .setServer(options.server || '')\n            .setCredentials(options.appKey || '', options.appSecret || '');\n        //TODO Link Platform events with Subscriptions and the rest\n    }\n    // Internals\n    RCSDK.prototype.getContext = function () { return this._context; };\n    // Core\n    RCSDK.prototype.getAjaxObserver = function () { return ajaxObserver.$get(this.getContext()); };\n    RCSDK.prototype.getXhrResponse = function () { return xhrResponse.$get(this.getContext()); };\n    RCSDK.prototype.getPlatform = function () { return platform.$get(this.getContext()); };\n    RCSDK.prototype.getCache = function () { return cache.$get(this.getContext()); };\n    RCSDK.prototype.getSubscription = function () { return subscription.$get(this.getContext()); };\n    RCSDK.prototype.getPageVisibility = function () { return pageVisibility.$get(this.getContext()); };\n    RCSDK.prototype.getHelper = function () { return helper.$get(this.getContext()); };\n    RCSDK.prototype.getObservable = function () { return observable.$get(this.getContext()); };\n    RCSDK.prototype.getValidator = function () { return validator.$get(this.getContext()); };\n    RCSDK.prototype.getLog = function () { return log.$get(this.getContext()); };\n    RCSDK.prototype.getUtils = function () { return utils.$get(this.getContext()); };\n    RCSDK.prototype.getList = function () { return list.$get(this.getContext()); };\n    // Helpers\n    RCSDK.prototype.getCountryHelper = function () { return countryHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceModelHelper = function () { return deviceModelHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLanguageHelper = function () { return languageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getLocationHelper = function () { return locationHelper.$get(this.getContext()); };\n    RCSDK.prototype.getShippingMethodHelper = function () { return shippingMethodHelper.$get(this.getContext()); };\n    RCSDK.prototype.getStateHelper = function () { return stateHelper.$get(this.getContext()); };\n    RCSDK.prototype.getTimezoneHelper = function () { return timezoneHelper.$get(this.getContext()); };\n    RCSDK.prototype.getAccountHelper = function () { return accountHelper.$get(this.getContext()); };\n    RCSDK.prototype.getBlockedNumberHelper = function () { return blockedNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getCallHelper = function () { return callHelper.$get(this.getContext()); };\n    RCSDK.prototype.getConferencingHelper = function () { return conferencingHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactHelper = function () { return contactHelper.$get(this.getContext()); };\n    RCSDK.prototype.getContactGroupHelper = function () { return contactGroupHelper.$get(this.getContext()); };\n    RCSDK.prototype.getDeviceHelper = function () { return deviceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getExtensionHelper = function () { return extensionHelper.$get(this.getContext()); };\n    RCSDK.prototype.getForwardingNumberHelper = function () { return forwardingNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getMessageHelper = function () { return messageHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPhoneNumberHelper = function () { return phoneNumberHelper.$get(this.getContext()); };\n    RCSDK.prototype.getPresenceHelper = function () { return presenceHelper.$get(this.getContext()); };\n    RCSDK.prototype.getRingoutHelper = function () { return ringoutHelper.$get(this.getContext()); };\n    RCSDK.prototype.getServiceHelper = function () { return serviceHelper.$get(this.getContext()); };\n    RCSDK.version = '1.3.2';\n    RCSDK.url = {\n        sandbox: 'https://platform.devtest.ringcentral.com',\n        production: 'https://platform.ringcentral.com'\n    };\n    RCSDK.injections = {\n        localStorage: (typeof (localStorage) !== 'undefined'\n            ? localStorage\n            : require('dom-' + 'storage')),\n        Promise: typeof (Promise) !== 'undefined' ? Promise : (promise.Promise || promise),\n        PUBNUB: pubnub,\n        XHR: function () {\n            try {\n                return new XMLHttpRequest();\n            }\n            catch (e) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\");\n            }\n            catch (e1) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\");\n            }\n            catch (e2) { }\n            try {\n                return new ActiveXObject(\"Msxml2.XMLHTTP\");\n            }\n            catch (e3) { }\n            try {\n                return new (require('xhr' + '2'))();\n            }\n            catch (e4) { } // Node only\n            throw new Error(\"This browser does not support XMLHttpRequest.\");\n        },\n        pubnubMock: pubnubMock,\n        xhrMock: xhrMock\n    };\n    return RCSDK;\n})();\nmodule.exports = RCSDK;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/RCSDK.ts\n ** module id = 1\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('../Observable');\nvar PubnubMock = (function (_super) {\n    __extends(PubnubMock, _super);\n    function PubnubMock(context, options) {\n        this.options = options;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n        _super.call(this, context);\n    }\n    PubnubMock.prototype.ready = function () { };\n    PubnubMock.prototype.subscribe = function (options) {\n        this.on('message-' + options.channel, options.message);\n    };\n    PubnubMock.prototype.unsubscribe = function (options) {\n        this.off('message-' + options.channel);\n    };\n    PubnubMock.prototype.receiveMessage = function (msg, channel) {\n        this.emit('message-' + channel, msg, 'env', channel);\n    };\n    return PubnubMock;\n})(observable.Observable);\nexports.PubnubMock = PubnubMock;\nvar PubnubFactory = (function () {\n    function PubnubFactory(context) {\n        this.context = context;\n        this.crypto_obj = context.getPubnubReal().crypto_obj;\n    }\n    PubnubFactory.prototype.init = function (options) {\n        return new PubnubMock(this.context, options);\n    };\n    return PubnubFactory;\n})();\nexports.PubnubFactory = PubnubFactory;\nfunction $get(context) {\n    return new PubnubFactory(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/pubnub/PubnubMock.ts\n ** module id = 2\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar log = require('./Log');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Observable = (function () {\n    function Observable(context) {\n        if (!(this instanceof Observable))\n            throw new Error('Observable(): New operator was omitted');\n        Object.defineProperty(this, 'listeners', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeEvents', { value: {}, enumerable: false, writable: true });\n        Object.defineProperty(this, 'oneTimeArguments', { value: {}, enumerable: false, writable: true });\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.log = log.$get(context);\n    }\n    Observable.prototype.hasListeners = function (event) {\n        return (event in this.listeners);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     */\n    Observable.prototype.registerOneTimeEvent = function (event) {\n        this.oneTimeEvents[event] = false;\n        this.oneTimeArguments[event] = [];\n    };\n    Observable.prototype.on = function (events, callback) {\n        var _this = this;\n        if (typeof events == 'string')\n            events = [events];\n        if (!events)\n            throw new Error('No events to subscribe to');\n        if (typeof callback !== 'function')\n            throw new Error('Callback must be a function');\n        var self = this;\n        events.forEach(function (event) {\n            if (!self.hasListeners(event))\n                self.listeners[event] = [];\n            self.listeners[event].push(callback);\n            if (self.isOneTimeEventFired(event)) {\n                _this.log.debug('Observable.on(%s): One-time event has been fired already, executing callback', event);\n                callback.apply(self, self.getOneTimeEventArgumens(event));\n            }\n        });\n        return this;\n    };\n    Observable.prototype.emit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this.isOneTimeEventFired(event)) {\n            this.log.debug('Observable.emit(%s): One-time event has been fired already', event);\n            return null;\n        }\n        var result = null;\n        if (this.isOneTimeEvent(event)) {\n            this.setOneTimeEventFired(event);\n            this.setOneTimeEventArgumens(event, args);\n        }\n        if (!this.hasListeners(event))\n            return null;\n        this.listeners[event].some(function (callback) {\n            result = callback.apply(_this, args);\n            return (result === false);\n        });\n        return result;\n    };\n    Observable.prototype.off = function (event, callback) {\n        var _this = this;\n        if (!event) {\n            this.listeners = {};\n            this.oneTimeEvents = {};\n            this.oneTimeArguments = {};\n        }\n        else {\n            if (!callback) {\n                delete this.listeners[event];\n            }\n            else {\n                if (!this.hasListeners(event))\n                    return this;\n                this.listeners[event].forEach(function (cb, i) {\n                    if (cb === callback)\n                        delete _this.listeners[event][i];\n                });\n            }\n        }\n        return this;\n    };\n    /**\n     * @deprecated\n     * @param event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEvent = function (event) {\n        return (event in this.oneTimeEvents);\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {boolean}\n     */\n    Observable.prototype.isOneTimeEventFired = function (event) {\n        if (!this.isOneTimeEvent(event))\n            return false;\n        return (this.oneTimeEvents[event]);\n    };\n    /**\n     * @deprecated\n     * @param event\n     */\n    Observable.prototype.setOneTimeEventFired = function (event) {\n        this.oneTimeEvents[event] = true;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @param args\n     */\n    Observable.prototype.setOneTimeEventArgumens = function (event, args) {\n        this.oneTimeArguments[event] = args;\n    };\n    /**\n     * @deprecated\n     * @param {string} event\n     * @returns {any}\n     */\n    Observable.prototype.getOneTimeEventArgumens = function (event) {\n        return this.oneTimeArguments[event];\n    };\n    /**\n     * @deprecated\n     * @returns {T}\n     */\n    Observable.prototype.offAll = function () {\n        return this.off();\n    };\n    Observable.prototype.destroy = function () {\n        this.off();\n        this.log.debug('Observable.destroy(): Listeners were destroyed');\n        return this;\n    };\n    Observable.prototype.emitAndCallback = function (event, args, callback) {\n        args = this.utils.argumentsToArray(args);\n        if (event)\n            this.emit.apply(this, [event].concat(args));\n        if (callback)\n            callback.apply(this, args);\n        return this;\n    };\n    return Observable;\n})();\nexports.Observable = Observable;\nfunction $get(context) {\n    return new Observable(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Observable.ts\n ** module id = 3\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar hasOwn = Object.prototype.hasOwnProperty, toString = Object.prototype.toString, rdigit = /\\d/, class2type = {};\n// Populate the class2type map\n'Boolean Number String Function Array Date RegExp Object'.split(' ').forEach(function (name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n});\nvar Utils = (function () {\n    function Utils() {\n    }\n    /**\n     * Ported from jQuery.fn.extend\n     * Optional first parameter makes deep copy\n     */\n    Utils.prototype.extend = function (targetObject, sourceObject) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n            // skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && !this.isFunction(target)) {\n            target = {};\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) !== null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && this.isArray(src) ? src : [];\n                        }\n                        else {\n                            clone = src && this.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = this.extend(deep, clone, copy);\n                    }\n                    else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    Utils.prototype.forEach = function (object, cb) {\n        for (var i in object) {\n            if (!object.hasOwnProperty(i))\n                continue;\n            var res = cb(object[i], i);\n            if (res === false)\n                break;\n        }\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {object} parameters\n     * @returns {string}\n     */\n    Utils.prototype.queryStringify = function (parameters) {\n        var _this = this;\n        var array = [];\n        this.forEach(parameters, function (v, i) {\n            if (_this.isArray(v)) {\n                v.forEach(function (vv) {\n                    array.push(encodeURIComponent(i) + '=' + encodeURIComponent(vv));\n                });\n            }\n            else {\n                array.push(encodeURIComponent(i) + '=' + encodeURIComponent(v));\n            }\n        });\n        return array.join('&');\n    };\n    /**\n     * TODO Replace with something better\n     * @see https://github.com/joyent/node/blob/master/lib/querystring.js\n     * @param {string} queryString\n     * @returns {object}\n     */\n    Utils.prototype.parseQueryString = function (queryString) {\n        var argsParsed = {}, self = this;\n        queryString.split('&').forEach(function (arg) {\n            arg = decodeURIComponent(arg);\n            if (arg.indexOf('=') == -1) {\n                argsParsed[arg.trim()] = true;\n            }\n            else {\n                var pair = arg.split('='), key = pair[0].trim(), value = pair[1].trim();\n                if (key in argsParsed) {\n                    if (key in argsParsed && !self.isArray(argsParsed[key]))\n                        argsParsed[key] = [argsParsed[key]];\n                    argsParsed[key].push(value);\n                }\n                else {\n                    argsParsed[key] = value;\n                }\n            }\n        });\n        return argsParsed;\n    };\n    /**\n     * Returns true if the passed value is valid email address.\n     * Checks multiple comma separated emails according to RFC 2822 if parameter `multiple` is `true`\n     */\n    Utils.prototype.isEmail = function (v, multiple) {\n        if (!!multiple) {\n            //this Regexp is also suitable for multiple emails (comma separated)\n            return /^(?:[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?[ ,;]*)+$/i.test(v);\n        }\n        else {\n            return /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(v);\n        }\n    };\n    Utils.prototype.isPhoneNumber = function (v) {\n        return (/\\+?1[0-9]{3}[0-9a-z]{7}/im.test(v.toString().split(/[^0-9a-z\\+]/im).join('')));\n    };\n    /**\n     * @param args\n     * @returns {Array}\n     */\n    Utils.prototype.argumentsToArray = function (args) {\n        return Array.prototype.slice.call(args || [], 0);\n    };\n    Utils.prototype.isDate = function (obj) {\n        return this.type(obj) === \"date\";\n    };\n    Utils.prototype.isFunction = function (obj) {\n        return this.type(obj) === \"function\";\n    };\n    Utils.prototype.isArray = function (obj) {\n        return Array.isArray ? Array.isArray(obj) : this.type(obj) === \"array\";\n    };\n    // A crude way of determining if an object is a window\n    Utils.prototype.isWindow = function (obj) {\n        return obj && typeof obj === \"object\" && \"setInterval\" in obj;\n    };\n    Utils.prototype.isNaN = function (obj) {\n        return obj === null || !rdigit.test(obj) || isNaN(obj);\n    };\n    Utils.prototype.type = function (obj) {\n        return obj === null\n            ? String(obj)\n            : class2type[toString.call(obj)] || \"object\";\n    };\n    Utils.prototype.isPlainObject = function (obj) {\n        // Must be an Object.\n        // Because of IE, we also have to check the presence of the constructor property.\n        // Make sure that DOM nodes and window objects don't pass through, as well\n        if (!obj || this.type(obj) !== \"object\" || obj.nodeType || this.isWindow(obj)) {\n            return false;\n        }\n        // Not own constructor property must be Object\n        if (obj.constructor && !hasOwn.call(obj, \"constructor\") && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n            return false;\n        }\n        // Own properties are enumerated firstly, so to speed up,\n        // if last one is own, then all properties are own.\n        var key;\n        for (key in obj) { }\n        return key === undefined || hasOwn.call(obj, key);\n    };\n    Utils.prototype.getProperty = function (obj, property) {\n        return property\n            .split(/[.[\\]]/)\n            .reduce(function (res, part) {\n            if (!res)\n                return undefined;\n            return part ? res[part] : res;\n        }, obj);\n    };\n    Utils.prototype.poll = function (fn, interval, timeout) {\n        this.stopPolling(timeout);\n        interval = interval || 1000;\n        var next = function (delay) {\n            delay = delay || interval;\n            interval = delay;\n            return setTimeout(function () {\n                fn(next, delay);\n            }, delay);\n        };\n        return next();\n    };\n    Utils.prototype.stopPolling = function (timeout) {\n        if (timeout)\n            clearTimeout(timeout);\n    };\n    Utils.prototype.parseString = function (s) {\n        return s ? s.toString() : '';\n    };\n    Utils.prototype.parseNumber = function (n) {\n        if (!n)\n            return 0;\n        n = parseFloat(n);\n        return isNaN(n) ? 0 : n;\n    };\n    return Utils;\n})();\nexports.Utils = Utils;\nfunction $get(context) {\n    return context.createSingleton('Utils', function () {\n        return new Utils();\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Utils.ts\n ** module id = 4\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Log = (function () {\n    function Log(context, console) {\n        if (!console) {\n            console = {\n                log: function () { },\n                warn: function () { },\n                info: function () { },\n                error: function () { }\n            };\n        }\n        this.context = context;\n        this.console = console;\n        this.utils = utils.$get(context);\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n        this.addTimestamps = false;\n    }\n    Log.prototype.disableAll = function () {\n        this.logDebug = false;\n        this.logInfo = false;\n        this.logWarnings = false;\n        this.logErrors = false;\n    };\n    Log.prototype.enableAll = function () {\n        this.logDebug = true;\n        this.logInfo = true;\n        this.logWarnings = true;\n        this.logErrors = true;\n    };\n    Log.prototype.parseArguments = function (args) {\n        args = this.utils.argumentsToArray(args);\n        if (this.addTimestamps)\n            args.unshift(new Date().toLocaleString(), '-');\n        return args;\n    };\n    Log.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logDebug)\n            this.console.log.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logInfo)\n            this.console.info.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logWarnings)\n            this.console.warn.apply(this.console, this.parseArguments(arguments));\n    };\n    Log.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        if (this.logErrors)\n            this.console.error.apply(this.console, this.parseArguments(arguments));\n    };\n    return Log;\n})();\nexports.Log = Log;\nfunction $get(context) {\n    return context.createSingleton('Log', function () {\n        return new Log(context, console);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Log.ts\n ** module id = 5\n ** module chunks = 0 2\n **/","var utils = require('../Utils');\nvar log = require('../Log');\nvar xhrResponse = require('./XhrResponse'); //FIXME Circular\nvar XhrMock = (function () {\n    function XhrMock(context) {\n        // Service\n        this.context = context;\n        this.responses = xhrResponse.$get(context);\n        this.log = log.$get(context);\n        this.utils = utils.$get(context);\n        // Request\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.requestHeaders = {};\n        this.withCredentials = false;\n        // Response\n        this.data = null;\n        this.readyState = 0;\n        this.responseHeaders = {};\n        this.status = 0;\n    }\n    XhrMock.prototype.getResponseHeader = function (header) {\n        return this.responseHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setRequestHeader = function (header, value) {\n        this.requestHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.getAllResponseHeaders = function () {\n        var res = [];\n        this.utils.forEach(this.responseHeaders, function (value, name) {\n            res.push(name + ':' + value);\n        });\n        return res.join('\\n');\n    };\n    XhrMock.prototype.open = function (method, url, async) {\n        this.method = method;\n        this.url = url;\n        this.async = async;\n    };\n    XhrMock.prototype.send = function (data) {\n        var _this = this;\n        var contentType = this.getRequestHeader('Content-Type');\n        this.data = data;\n        if (this.data && typeof this.data == 'string') {\n            // For convenience encoded post data will be decoded\n            if (contentType == 'application/json')\n                this.data = JSON.parse(this.data);\n            if (contentType == 'application/x-www-form-urlencoded')\n                this.data = this.utils.parseQueryString(this.data);\n        }\n        this.log.debug('API REQUEST', this.method, this.url);\n        var currentResponse = this.responses.find(this);\n        if (!currentResponse) {\n            setTimeout(function () {\n                if (_this.onerror)\n                    _this.onerror(new Error('Unknown request: ' + _this.url));\n            }, 1);\n            return;\n        }\n        this.setStatus(200);\n        this.setResponseHeader('Content-Type', 'application/json');\n        var res = currentResponse.response(this), Promise = this.context.getPromise(), onLoad = function (res) {\n            if (_this.getResponseHeader('Content-Type') == 'application/json')\n                res = JSON.stringify(res);\n            _this.responseText = res;\n            setTimeout(function () {\n                if (_this.onload)\n                    _this.onload();\n            }, 1);\n        };\n        if (res instanceof Promise) {\n            res.then(onLoad.bind(this)).catch(this.onerror.bind(this));\n        }\n        else\n            onLoad(res);\n    };\n    XhrMock.prototype.abort = function () {\n        this.log.debug('XhrMock.destroy(): Aborted');\n    };\n    XhrMock.prototype.getRequestHeader = function (header) {\n        return this.requestHeaders[header.toLowerCase()];\n    };\n    XhrMock.prototype.setResponseHeader = function (header, value) {\n        this.responseHeaders[header.toLowerCase()] = value;\n    };\n    XhrMock.prototype.setStatus = function (status) {\n        this.status = status;\n        return this;\n    };\n    return XhrMock;\n})();\nexports.XhrMock = XhrMock;\nfunction $get(context) {\n    return new XhrMock(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrMock.ts\n ** module id = 6\n ** module chunks = 0\n **/","var XhrResponse = (function () {\n    function XhrResponse(context) {\n        this.responses = [];\n    }\n    XhrResponse.prototype.add = function (response) {\n        this.responses.push(response);\n    };\n    XhrResponse.prototype.clear = function () {\n        this.responses = [];\n    };\n    XhrResponse.prototype.find = function (ajax) {\n        var currentResponse = null;\n        this.responses.forEach(function (response) {\n            if (ajax.url.indexOf(response.path) > -1 && (!response.test || response.test(ajax))) {\n                currentResponse = response;\n            }\n        });\n        return currentResponse;\n    };\n    return XhrResponse;\n})();\nexports.XhrResponse = XhrResponse;\nfunction $get(context) {\n    return context.createSingleton('XhrResponse', function () {\n        return new XhrResponse(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/xhr/XhrResponse.ts\n ** module id = 7\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar AjaxObserver = (function (_super) {\n    __extends(AjaxObserver, _super);\n    function AjaxObserver() {\n        _super.apply(this, arguments);\n        this.events = {\n            beforeRequest: 'beforeRequest',\n            requestSuccess: 'requestSuccess',\n            requestError: 'requestError' // means that request failed completely\n        };\n    }\n    return AjaxObserver;\n})(observable.Observable);\nexports.AjaxObserver = AjaxObserver;\nfunction $get(context) {\n    return context.createSingleton('AjaxObserver', function () {\n        return new AjaxObserver(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/AjaxObserver.ts\n ** module id = 8\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Cache = (function () {\n    function Cache(context) {\n        this.setPrefix();\n        this.context = context;\n        this.storage = context.getLocalStorage(); // storage must be defined from outside\n    }\n    Cache.prototype.setPrefix = function (prefix) {\n        this.prefix = prefix || 'rc-';\n        return this;\n    };\n    Cache.prototype.prefixKey = function (key) {\n        return this.prefix + key;\n    };\n    Cache.prototype.setItem = function (key, data) {\n        this.storage.setItem(this.prefixKey(key), JSON.stringify(data));\n        return this;\n    };\n    Cache.prototype.removeItem = function (key) {\n        this.storage.removeItem(this.prefixKey(key));\n        return this;\n    };\n    Cache.prototype.getItem = function (key) {\n        var item = this.storage.getItem(this.prefixKey(key));\n        if (!item)\n            return null;\n        return JSON.parse(item);\n    };\n    Cache.prototype.clean = function () {\n        for (var key in this.storage) {\n            if (!this.storage.hasOwnProperty(key))\n                continue;\n            if (key.indexOf(this.prefix) === 0) {\n                this.storage.removeItem(key);\n                delete this.storage[key];\n            }\n        }\n        return this;\n    };\n    return Cache;\n})();\nexports.Cache = Cache;\nfunction $get(context) {\n    return context.createSingleton('Cache', function () {\n        return new Cache(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Cache.ts\n ** module id = 9\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar Context = (function () {\n    function Context(injections) {\n        this.singletons = {};\n        this.injections = injections;\n        this.stubPubnub = false;\n        this.stubAjax = false;\n    }\n    Context.prototype.createSingleton = function (name, factory) {\n        if (!this.singletons[name])\n            this.singletons[name] = factory();\n        return this.singletons[name];\n    };\n    Context.prototype.usePubnubStub = function (flag) {\n        this.stubPubnub = !!flag;\n        return this;\n    };\n    Context.prototype.useAjaxStub = function (flag) {\n        this.stubAjax = !!flag;\n        return this;\n    };\n    Context.prototype.getPubnub = function () {\n        return this.stubPubnub ? this.injections.pubnubMock.$get(this) : this.getPubnubReal();\n    };\n    Context.prototype.getPubnubReal = function () {\n        return this.injections.PUBNUB;\n    };\n    Context.prototype.getLocalStorage = function () {\n        var _this = this;\n        return this.createSingleton('localStorage', function () {\n            if (typeof _this.injections.localStorage !== 'function') {\n                return _this.injections.localStorage; // this is window.localStorage\n            }\n            return new _this.injections.localStorage(); // this is NPM dom-storage constructor\n        });\n    };\n    Context.prototype.getPromise = function () {\n        return this.injections.Promise;\n    };\n    Context.prototype.getXHR = function () {\n        return (this.stubAjax ? this.injections.xhrMock.$get(this) : this.injections.XHR());\n    };\n    return Context;\n})();\nexports.Context = Context;\nfunction $get(injections) {\n    return new Context(injections);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Context.ts\n ** module id = 10\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Helper = (function () {\n    function Helper(context) {\n        this.defaultProperty = 'id';\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Helper.prototype.getContext = function () {\n        return this.context;\n    };\n    Helper.prototype.createUrl = function (options, id) {\n        return '';\n    };\n    Helper.prototype.getId = function (object) {\n        return object && object[this.defaultProperty];\n    };\n    Helper.prototype.isNew = function (object) {\n        return !this.getId(object) || !this.getUri(object);\n    };\n    Helper.prototype.resetAsNew = function (object) {\n        if (object) {\n            delete object.id;\n            delete object.uri;\n        }\n        return object;\n    };\n    Helper.prototype.getUri = function (object) {\n        return object && object.uri;\n    };\n    Helper.prototype.parseMultipartResponse = function (ajax) {\n        if (ajax.isMultipart()) {\n            // ajax.data has full array, leave only successful\n            return ajax.data.filter(function (result) {\n                return (!result.error);\n            }).map(function (result) {\n                return result.data;\n            });\n        }\n        else {\n            return [ajax.data];\n        }\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.loadRequest = function (object, options) {\n        return this.utils.extend(options || {}, {\n            url: (options && options.url) || (object && this.getUri(object)) || this.createUrl(),\n            method: (options && options.method) || 'GET'\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided, default will be returned\n     */\n    Helper.prototype.saveRequest = function (object, options) {\n        if (!object && !(options && (options.post || options.body)))\n            throw new Error('No Object');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || (this.isNew(object) ? 'POST' : 'PUT'),\n            url: (options && options.url) || this.getUri(object) || this.createUrl(),\n            body: (options && (options.body || options.post)) || object\n        });\n    };\n    /**\n     * Options have higher priority, if object.url and options.url were provided, options.url will be returned\n     * If no URL was provided exception will be thrown\n     */\n    Helper.prototype.deleteRequest = function (object, options) {\n        options = options || {};\n        if (!this.getUri(object) && !(options && options.url))\n            throw new Error('Object has to be not new or URL must be provided');\n        return this.utils.extend(options || {}, {\n            method: (options && options.method) || 'DELETE',\n            url: (options && options.url) || this.getUri(object)\n        });\n    };\n    /**\n     * If no url was provided, default SYNC url will be returned\n     */\n    Helper.prototype.syncRequest = function (options) {\n        options = options || {};\n        options.url = options.url || this.createUrl({ sync: true });\n        options.query = options.query || options.get || {};\n        if (!!options.query.syncToken) {\n            options.query = {\n                syncType: 'ISync',\n                syncToken: options.get.syncToken\n            };\n        }\n        else {\n            options.query.syncType = 'FSync';\n        }\n        return options;\n    };\n    Helper.prototype.nextPageExists = function (data) {\n        return (data && data.navigation && ('nextPage' in data.navigation));\n    };\n    /**\n     * array - an array to be indexed\n     * getIdFn - must return an ID for each array item\n     * gather - if true, then each index will have an array of items, that has same ID, otherwise the first indexed\n     * item wins\n     */\n    Helper.prototype.index = function (array, getIdFn, gather) {\n        getIdFn = getIdFn || this.getId.bind(this);\n        array = array || [];\n        return array.reduce(function (index, item) {\n            var id = getIdFn(item);\n            if (!id || (index[id] && !gather))\n                return index;\n            if (gather) {\n                if (!index[id])\n                    index[id] = [];\n                index[id].push(item);\n            }\n            else {\n                index[id] = item;\n            }\n            return index;\n        }, {});\n    };\n    /**\n     * Returns a shallow copy of merged _target_ array plus _supplement_ array\n     * mergeItems\n     * - if true, properties of _supplement_ item will be applied to _target_ item,\n     * - otherwise _target_ item will be replaced\n     */\n    Helper.prototype.merge = function (target, supplement, getIdFn, mergeItems) {\n        var _this = this;\n        getIdFn = getIdFn || this.getId.bind(this);\n        target = target || [];\n        supplement = supplement || [];\n        var supplementIndex = this.index(supplement, getIdFn), updatedIDs = [], result = target.map(function (item) {\n            var id = getIdFn(item), newItem = supplementIndex[id];\n            if (newItem)\n                updatedIDs.push(id);\n            return newItem ? (mergeItems ? _this.utils.extend(item, newItem) : newItem) : item;\n        });\n        supplement.forEach(function (item) {\n            if (updatedIDs.indexOf(getIdFn(item)) == -1)\n                result.push(item);\n        });\n        return result;\n    };\n    return Helper;\n})();\nexports.Helper = Helper;\nfunction $get(context) {\n    return new Helper(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Helper.ts\n ** module id = 11\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar List = (function () {\n    function List(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n        this.numberComparator = this.numberComparator.bind(this);\n        this.stringComparator = this.stringComparator.bind(this);\n    }\n    /**\n     * TODO Use utils getProperty\n     * @param {string} property\n     * @returns {function(object)}\n     */\n    List.prototype.propertyExtractor = function (property) {\n        return function (item, options) {\n            return property ? ((item && item[property]) || null) : item;\n        };\n    };\n    /**\n     * Non-string types are converted to string\n     * Non-string types are extracted as an empty string if they could be converted to false\n     * If no options.sortBy given the item itself is extracted\n     * Compares strings:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.stringComparator = function (a, b, options) {\n        return this.utils.parseString(a).localeCompare(this.utils.parseString(b));\n    };\n    /**\n     * Non-numeric types are extracted as 0 if they could be converted to false\n     * Objects that could not be converted to number are extracted as 0\n     * If no options.sortBy given the item itself is extracted\n     * See parseFloat for more info\n     * Compares numbers:\n     * - if (a is less than b) return -1;\n     * - if (a is greater than b) return 1;\n     * - else (a must be equal to b) return 0;\n     * Function does not check types\n     * Exceptions in will be suppressed, if any - a is assumed to be less than b\n     */\n    List.prototype.numberComparator = function (a, b, options) {\n        return (this.utils.parseNumber(a) - this.utils.parseNumber(b));\n    };\n    /**\n     * Function extracts (using _extractFn_ option) values of a property (_sortBy_ option) and compares them using\n     * compare function (_compareFn_ option, by default Helper.stringComparator)\n     * Merged options are provided to _extractFn_ and _compareFn_\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            extractFn: this.propertyExtractor((options && options.sortBy) || null).bind(this),\n            compareFn: this.stringComparator.bind(this)\n        }, options);\n        return function (item1, item2) {\n            return options.compareFn(options.extractFn(item1, options), options.extractFn(item2, options), options);\n        };\n    };\n    List.prototype.equalsFilter = function (obj, options) {\n        return (options.condition === obj);\n    };\n    /**\n     * @param {string} obj\n     * @param {IListFilterOptions} options\n     * @returns {boolean}\n     */\n    List.prototype.containsFilter = function (obj, options) {\n        return (obj && obj.toString().indexOf(options.condition) > -1);\n    };\n    List.prototype.regexpFilter = function (obj, options) {\n        if (!(options.condition instanceof RegExp))\n            throw new Error('Condition must be an instance of RegExp');\n        return (options.condition.test(obj));\n    };\n    /**\n     * Function extracts (using `extractFn` option) values of a property (`filterBy` option) and filters them using\n     * compare function (`filterFn` option, by default Helper.equalsFilter)\n     * Merged options are provided to `extractFn` and `compareFn`\n     * Set `filterBy` to null to force `propertyExtractor` to return object itself\n     * TODO Check memory leaks for all that options links\n     */\n    List.prototype.filter = function (filterConfigs) {\n        var _this = this;\n        var self = this;\n        filterConfigs = (filterConfigs || []).map(function (opt) {\n            return _this.utils.extend({\n                condition: '',\n                extractFn: self.propertyExtractor((opt && opt.filterBy) || null).bind(_this),\n                filterFn: self.equalsFilter.bind(_this)\n            }, opt);\n        });\n        return function (item) {\n            return filterConfigs.reduce(function (pass, opt) {\n                if (!pass || !opt.condition)\n                    return pass;\n                return opt.filterFn(opt.extractFn(item, opt), opt);\n            }, true);\n        };\n    };\n    return List;\n})();\nexports.List = List;\nfunction $get(context) {\n    return context.createSingleton('List', function () {\n        return new List(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/List.ts\n ** module id = 12\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar PageVisibility = (function (_super) {\n    __extends(PageVisibility, _super);\n    function PageVisibility(context) {\n        var _this = this;\n        _super.call(this, context);\n        this.events = {\n            change: 'change'\n        };\n        var hidden = \"hidden\", onchange = function (evt) {\n            evt = evt || window.event;\n            var v = 'visible', h = 'hidden', evtMap = {\n                focus: v, focusin: v, pageshow: v, blur: h, focusout: h, pagehide: h\n            };\n            _this.visible = (evt.type in evtMap) ? evtMap[evt.type] == v : !document[hidden];\n            _this.emit(_this.events.change, _this.visible);\n        };\n        this.visible = true;\n        if (typeof document == 'undefined' || typeof window == 'undefined')\n            return;\n        // Standards:\n        if (hidden in document)\n            document.addEventListener(\"visibilitychange\", onchange);\n        else if ((hidden = \"mozHidden\") in document)\n            document.addEventListener(\"mozvisibilitychange\", onchange);\n        else if ((hidden = \"webkitHidden\") in document)\n            document.addEventListener(\"webkitvisibilitychange\", onchange);\n        else if ((hidden = \"msHidden\") in document)\n            document.addEventListener(\"msvisibilitychange\", onchange);\n        else if ('onfocusin' in document)\n            document.onfocusin = document.onfocusout = onchange;\n        else\n            window.onpageshow = window.onpagehide = window.onfocus = window.onblur = onchange;\n    }\n    PageVisibility.prototype.isVisible = function () {\n        return this.visible;\n    };\n    return PageVisibility;\n})(observable.Observable);\nexports.PageVisibility = PageVisibility;\nfunction $get(context) {\n    return new PageVisibility(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/PageVisibility.ts\n ** module id = 13\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar cache = require('./Cache');\nvar request = require('./http/Request');\nvar Platform = (function (_super) {\n    __extends(Platform, _super);\n    function Platform(context) {\n        _super.call(this, context);\n        this.events = {\n            accessViolation: 'accessViolation',\n            logoutSuccess: 'logoutSuccess',\n            logoutError: 'logoutError',\n            authorizeSuccess: 'authorizeSuccess',\n            authorizeError: 'authorizeError',\n            refreshSuccess: 'refreshSuccess',\n            refreshError: 'refreshError'\n        };\n        this.server = '';\n        this.apiKey = '';\n        this.account = '~';\n        this.urlPrefix = '/restapi';\n        this.apiVersion = 'v1.0';\n        this.accountPrefix = '/account/';\n        this.accessTokenTtl = null; // Platform server by default sets it to 60 * 60 = 1 hour\n        this.refreshTokenTtl = 10 * 60 * 60; // 10 hours\n        this.refreshTokenTtlRemember = 7 * 24 * 60 * 60; // 1 week\n        this.refreshHandicapMs = 60 * 1000; // 1 minute\n        this.refreshDelayMs = 100;\n        this.clearCacheOnRefreshError = true;\n        this.refreshPromise = null;\n        this.cacheId = 'platform';\n        this.pollInterval = 250;\n        this.releaseTimeout = 5000; // If queue was not released then force it to do so after some timeout\n    }\n    Platform.prototype.getStorage = function () {\n        return cache.$get(this.context);\n    };\n    Platform.prototype.getRequest = function () {\n        return request.$get(this.context);\n    };\n    Platform.prototype.clearStorage = function () {\n        this.getStorage().clean();\n        return this;\n    };\n    Platform.prototype.setCredentials = function (appKey, appSecret) {\n        var apiKey = (appKey || '') + ':' + (appSecret || '');\n        if (apiKey == ':')\n            return this;\n        this.apiKey = (typeof btoa == 'function') ? btoa(apiKey) : new Buffer(apiKey).toString('base64');\n        return this;\n    };\n    Platform.prototype.getCredentials = function () {\n        var credentials = ((typeof atob == 'function')\n            ? atob(this.apiKey)\n            : new Buffer(this.apiKey, 'base64').toString('utf-8')).split(':');\n        return {\n            key: credentials[0],\n            secret: credentials[1]\n        };\n    };\n    Platform.prototype.setServer = function (server) {\n        this.server = server || '';\n        return this;\n    };\n    Platform.prototype.remember = function (remember) {\n        var key = this.cacheId + '-remember';\n        if (remember !== undefined) {\n            this.getStorage().setItem(key, remember);\n            return this;\n        }\n        return this.getStorage().getItem(key) || false;\n    };\n    Platform.prototype.getAuthURL = function (options) {\n        options = options || {};\n        return this.apiUrl('/restapi/oauth/authorize?' + this.utils.queryStringify({\n            'response_type': 'code',\n            'redirect_uri': options.redirectUri || '',\n            'client_id': this.getCredentials().key,\n            'state': options.state || '',\n            'brand_id': options.brandId || '',\n            'display': options.display || '',\n            'prompt': options.prompt || ''\n        }), { addServer: true });\n    };\n    Platform.prototype.parseAuthRedirectUrl = function (url) {\n        var qs = this.utils.parseQueryString(url.split('?').reverse()[0]), error = qs.error_description || qs.error;\n        if (error) {\n            var e = new Error(error);\n            e.error = qs.error;\n            throw e;\n        }\n        return qs;\n    };\n    Platform.prototype.authorize = function (options) {\n        var _this = this;\n        options = options || {};\n        options.remember = options.remember || false;\n        var body = {\n            \"access_token_ttl\": this.accessTokenTtl,\n            \"refresh_token_ttl\": options.remember ? this.refreshTokenTtlRemember : this.refreshTokenTtl\n        };\n        if (options.username) {\n            body.grant_type = 'password';\n            body.username = options.username;\n            body.password = options.password;\n            body.extension = options.extension || '';\n        }\n        else if (options.code) {\n            body.grant_type = 'authorization_code';\n            body.code = options.code;\n            body.redirect_uri = options.redirectUri;\n        }\n        else {\n            return this.context.getPromise().reject(new Error('Unsupported authorization flow'));\n        }\n        return this.authCall({\n            url: '/restapi/oauth/token',\n            post: body\n        }).then(function (response) {\n            _this.setCache(response.data)\n                .remember(options.remember)\n                .emitAndCallback(_this.events.authorizeSuccess, []);\n            return response;\n        }).catch(function (e) {\n            _this.clearStorage()\n                .emitAndCallback(_this.events.authorizeError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.isPaused = function () {\n        var storage = this.getStorage(), cacheId = this.cacheId + '-refresh';\n        return !!storage.getItem(cacheId) && Date.now() - parseInt(storage.getItem(cacheId)) < this.releaseTimeout;\n    };\n    Platform.prototype.pause = function () {\n        this.getStorage().setItem(this.cacheId + '-refresh', Date.now());\n        return this;\n    };\n    /**\n     * If the queue is unpaused internally, polling will be cancelled\n     * @returns {Platform}\n     */\n    Platform.prototype.resume = function () {\n        this.getStorage().removeItem(this.cacheId + '-refresh');\n        return this;\n    };\n    Platform.prototype.refresh = function () {\n        var _this = this;\n        var refresh = new (this.context.getPromise())(function (resolve, reject) {\n            if (_this.isPaused()) {\n                return resolve(_this.refreshPolling(null));\n            }\n            else {\n                _this.pause();\n            }\n            // Make sure all existing AJAX calls had a chance to reach the server\n            setTimeout(function () {\n                var authData = _this.getAuthData();\n                _this.log.debug('Platform.refresh(): Performing token refresh (access token', authData.access_token, ', refresh token', authData.refresh_token, ')');\n                if (!authData || !authData.refresh_token)\n                    return reject(new Error('Refresh token is missing'));\n                if (Date.now() > authData.refreshExpireTime)\n                    return reject(new Error('Refresh token has expired'));\n                if (!_this.isPaused())\n                    return reject(new Error('Queue was resumed before refresh call'));\n                resolve(_this.authCall({\n                    url: '/restapi/oauth/token',\n                    post: {\n                        \"grant_type\": \"refresh_token\",\n                        \"refresh_token\": authData.refresh_token,\n                        \"access_token_ttl\": _this.accessTokenTtl,\n                        \"refresh_token_ttl\": _this.remember() ? _this.refreshTokenTtlRemember : _this.refreshTokenTtl\n                    }\n                }));\n            }, _this.refreshDelayMs);\n        });\n        return refresh.then(function (response) {\n            // This means refresh has happened elsewhere and we are here because of timeout\n            if (!response || !response.data)\n                return response;\n            _this.log.info('Platform.refresh(): Token was refreshed');\n            if (!response.data.refresh_token || !response.data.access_token) {\n                var e = new Error('Malformed OAuth response');\n                e.ajax = response;\n                throw e;\n            }\n            _this.setCache(response.data)\n                .resume();\n            return response;\n        }).then(function (result) {\n            _this.emit(_this.events.refreshSuccess, result);\n            return result;\n        }).catch(function (e) {\n            if (_this.clearCacheOnRefreshError)\n                _this.clearStorage();\n            _this.emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.refreshError, [e]);\n            throw e;\n        });\n    };\n    /**\n     * @returns {Promise}\n     */\n    Platform.prototype.logout = function () {\n        var _this = this;\n        this.pause();\n        return this.authCall({\n            url: '/restapi/oauth/revoke',\n            post: {\n                token: this.getToken()\n            }\n        }).then(function (response) {\n            _this.resume()\n                .clearStorage()\n                .emit(_this.events.logoutSuccess, response);\n            return response;\n        }).catch(function (e) {\n            _this.resume()\n                .emitAndCallback(_this.events.accessViolation, [e])\n                .emitAndCallback(_this.events.logoutError, [e]);\n            throw e;\n        });\n    };\n    Platform.prototype.refreshPolling = function (result) {\n        var _this = this;\n        if (this.refreshPromise)\n            return this.refreshPromise;\n        this.refreshPromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.log.warn('Platform.refresh(): Refresh is already in progress polling started');\n            _this.utils.poll(function (next) {\n                if (_this.isPaused())\n                    return next();\n                _this.refreshPromise = null;\n                _this.resume();\n                if (_this.isTokenValid()) {\n                    resolve(result);\n                }\n                else {\n                    reject(new Error('Automatic authentification timeout'));\n                }\n            }, _this.pollInterval);\n        });\n        return this.refreshPromise;\n    };\n    Platform.prototype.getToken = function () {\n        return this.getAuthData().access_token;\n    };\n    Platform.prototype.getTokenType = function () {\n        return this.getAuthData().token_type;\n    };\n    Platform.prototype.getAuthData = function () {\n        return this.getStorage().getItem(this.cacheId) || {\n            token_type: '',\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        };\n    };\n    /**\n     * Check if there is a valid (not expired) access token\n     */\n    Platform.prototype.isTokenValid = function () {\n        var authData = this.getAuthData();\n        return (authData.token_type == Platform.forcedTokenType || (new Date(authData.expireTime).getTime() - this.refreshHandicapMs) > Date.now() && !this.isPaused());\n    };\n    /**\n     * Checks if user is authorized\n     * If there is no access token, refresh will be performed\n     */\n    Platform.prototype.isAuthorized = function () {\n        if (this.isTokenValid())\n            return this.context.getPromise().resolve(true);\n        return this.refresh();\n    };\n    Platform.prototype.cancelAccessToken = function () {\n        return this.setCache(this.utils.extend(this.getAuthData(), {\n            access_token: '',\n            expires_in: 0\n        }));\n    };\n    Platform.prototype.setCache = function (authData) {\n        var oldAuthData = this.getAuthData();\n        this.log.info('Platform.setCache(): Tokens were updated, new:', authData, ', old:', oldAuthData);\n        authData.expireTime = Date.now() + (authData.expires_in * 1000);\n        authData.refreshExpireTime = Date.now() + (authData.refresh_token_expires_in * 1000);\n        this.getStorage().setItem(this.cacheId, authData);\n        return this;\n    };\n    Platform.prototype.forceAuthentication = function () {\n        this.setCache({\n            token_type: Platform.forcedTokenType,\n            access_token: '',\n            expires_in: 0,\n            refresh_token: '',\n            refresh_token_expires_in: 0\n        });\n        return this;\n    };\n    Platform.prototype.apiCall = function (options) {\n        var _this = this;\n        options = options || {};\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.isAuthorized().then(function () {\n            var token = _this.getToken();\n            return _this.getRequest()\n                .setOptions(options)\n                .setHeader('Authorization', _this.getTokenType() + (token ? ' ' + token : ''))\n                .send();\n        }).catch(function (e) {\n            if (!e.response || !e.response.isUnauthorized())\n                throw e;\n            _this.cancelAccessToken();\n            return _this\n                .refresh()\n                .then(function () {\n                // Re-send with same options\n                return _this.apiCall(options);\n            });\n        });\n    };\n    Platform.prototype.get = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'GET';\n        return this.apiCall(options);\n    };\n    Platform.prototype.post = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'POST';\n        return this.apiCall(options);\n    };\n    Platform.prototype.put = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'PUT';\n        return this.apiCall(options);\n    };\n    Platform.prototype['delete'] = function (url, options) {\n        options = options || {};\n        options.url = url;\n        options.method = 'DELETE';\n        return this.apiCall(options);\n    };\n    Platform.prototype.authCall = function (options) {\n        options = options || {};\n        options.method = options.method || 'POST';\n        options.url = this.apiUrl(options.url, { addServer: true });\n        return this.getRequest()\n            .setOptions(options)\n            .setHeader('Content-Type', 'application/x-www-form-urlencoded')\n            .setHeader('Accept', 'application/json')\n            .setHeader('Authorization', 'Basic ' + this.apiKey)\n            .send();\n    };\n    Platform.prototype.apiUrl = function (url, options) {\n        url = url || '';\n        options = options || {};\n        var builtUrl = '', hasHttp = url.indexOf('http://') != -1 || url.indexOf('https://') != -1;\n        if (options.addServer && !hasHttp)\n            builtUrl += this.server;\n        if (url.indexOf(this.urlPrefix) == -1 && !hasHttp)\n            builtUrl += this.urlPrefix + '/' + this.apiVersion;\n        if (url.indexOf(this.accountPrefix) > -1)\n            builtUrl.replace(this.accountPrefix + '~', this.accountPrefix + this.account);\n        builtUrl += url;\n        if (options.addMethod || options.addToken)\n            builtUrl += (url.indexOf('?') > -1 ? '&' : '?');\n        if (options.addMethod)\n            builtUrl += '_method=' + options.addMethod;\n        if (options.addToken)\n            builtUrl += (options.addMethod ? '&' : '') + 'access_token=' + this.getToken();\n        return builtUrl;\n    };\n    Platform.forcedTokenType = 'forced';\n    return Platform;\n})(observable.Observable);\nexports.Platform = Platform;\nfunction $get(context) {\n    return context.createSingleton('Platform', function () {\n        return new Platform(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Platform.ts\n ** module id = 14\n ** module chunks = 0\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = require('./Headers');\nvar ajaxObserver = require('../AjaxObserver');\nvar r = require('./Response');\n/**\n * TODO @see https://github.com/github/fetch/blob/master/fetch.js\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    function Request(context) {\n        _super.call(this, context);\n        this.async = true;\n        this.method = '';\n        this.url = '';\n        this.query = null;\n        this.body = {};\n        this.context = context;\n        this.xhr = null;\n        this.observer = ajaxObserver.$get(context);\n    }\n    Request.prototype.isLoaded = function () {\n        return !!this.xhr;\n    };\n    Request.prototype.setOptions = function (options) {\n        options = options || {};\n        // backwards compatibility\n        if (!('body' in options) && options.post)\n            options.body = options.post;\n        if (!('query' in options) && options.get)\n            options.query = options.get;\n        if ('method' in options)\n            this.method = options.method;\n        if ('url' in options)\n            this.url = options.url;\n        if ('query' in options)\n            this.query = options.query;\n        if ('body' in options)\n            this.body = options.body;\n        if ('headers' in options)\n            this.setHeaders(options.headers);\n        if ('async' in options)\n            this.async = !!options.async;\n        return this;\n    };\n    /**\n     * Checks the send options, defaulting various of the options,\n     * and consuming / transforming some of the options (like get).\n     */\n    Request.prototype.checkOptions = function () {\n        if (!this.url)\n            throw new Error('Url is not defined');\n        if (!this.hasHeader('Accept'))\n            this.setHeader('Accept', h.Headers.jsonContentType);\n        if (!this.hasHeader('Content-Type'))\n            this.setHeader('Content-Type', h.Headers.jsonContentType);\n        this.method = this.method ? this.method.toUpperCase() : 'GET';\n        if (['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS', 'HEAD'].indexOf(this.method) < 0)\n            throw new Error('Method has wrong value');\n        return this;\n    };\n    Request.prototype.getEncodedBody = function () {\n        if (this.method === 'GET')\n            return null;\n        if (typeof this.body === 'string') {\n            return this.body;\n        }\n        else if (this.isJson()) {\n            return JSON.stringify(this.body);\n        }\n        else if (this.isUrlEncoded()) {\n            return this.utils.queryStringify(this.body);\n        }\n        else {\n            return this.body;\n        }\n    };\n    Request.prototype.send = function () {\n        var _this = this;\n        this.observer.emit(this.observer.events.beforeRequest, this);\n        var responsePromise = new (this.context.getPromise())(function (resolve, reject) {\n            _this.checkOptions();\n            var xhr = _this.getXHR(), url = _this.url + (!!_this.query ? ((_this.url.indexOf('?') > -1 ? '&' : '?') + _this.utils.queryStringify(_this.query)) : '');\n            xhr.open(_this.method, url, _this.async);\n            //@see http://stackoverflow.com/questions/19666809/cors-withcredentials-support-limited\n            xhr.withCredentials = true;\n            xhr.onload = function () {\n                //TODO http://jira.ringcentral.com/browse/PLA-10585\n                var response = r.$get(_this.context, xhr.status, xhr.statusText, xhr.responseText, xhr.getAllResponseHeaders());\n                if (response.error) {\n                    var e = response.error;\n                    e.ajax = response; // backwards compatibility\n                    e.response = response; //FIXME Circular\n                    e.request = _this;\n                    reject(e);\n                }\n                else {\n                    resolve(response);\n                }\n            };\n            xhr.onerror = function (event) {\n                var e = new Error('The request cannot be sent' + (event ? ' (' + event.toString() + ')' : ''));\n                e.request = _this;\n                e.response = null;\n                e.ajax = null; // backwards compatibility\n                reject(e);\n            };\n            _this.utils.forEach(_this.headers, function (value, header) {\n                if (!!value)\n                    xhr.setRequestHeader(header, value);\n            });\n            xhr.send(_this.getEncodedBody());\n            _this.xhr = xhr;\n        });\n        return responsePromise.then(function (response) {\n            _this.observer.emit(_this.observer.events.requestSuccess, response, _this);\n            return response;\n        }).catch(function (e) {\n            _this.observer.emit(_this.observer.events.requestError, e);\n            throw e;\n        });\n    };\n    Request.prototype.getXHR = function () {\n        return this.context.getXHR();\n    };\n    Request.prototype.destroy = function () {\n        if (this.xhr)\n            this.xhr.abort();\n    };\n    return Request;\n})(h.Headers);\nexports.Request = Request;\nfunction $get(context) {\n    return new Request(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Request.ts\n ** module id = 15\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar utils = require('../Utils');\n/**\n * @see https://github.com/Microsoft/TypeScript/issues/275\n */\nvar Headers = (function () {\n    function Headers(context) {\n        this.headers = {};\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Headers.prototype.setHeader = function (name, value) {\n        this.headers[name.toLowerCase()] = value;\n        return this;\n    };\n    Headers.prototype.getHeader = function (name) {\n        return this.headers[name.toLowerCase()];\n    };\n    Headers.prototype.hasHeader = function (name) {\n        return (name.toLowerCase() in this.headers);\n    };\n    Headers.prototype.setHeaders = function (headers) {\n        var _this = this;\n        this.utils.forEach(headers, function (value, name) {\n            _this.setHeader(name, value);\n        });\n        return this;\n    };\n    Headers.prototype.isContentType = function (contentType) {\n        return this.getContentType().indexOf(contentType) > -1;\n    };\n    Headers.prototype.setContentType = function (contentType) {\n        this.setHeader(Headers.contentType, contentType);\n        return this;\n    };\n    Headers.prototype.getContentType = function () {\n        return this.getHeader(Headers.contentType) || '';\n    };\n    Headers.prototype.isMultipart = function () {\n        return this.isContentType(Headers.multipartContentType);\n    };\n    Headers.prototype.isUrlEncoded = function () {\n        return this.isContentType(Headers.urlencodedContentType);\n    };\n    Headers.prototype.isJson = function () {\n        return this.isContentType(Headers.jsonContentType);\n    };\n    Headers.contentType = 'Content-Type';\n    Headers.jsonContentType = 'application/json';\n    Headers.multipartContentType = 'multipart/mixed';\n    Headers.urlencodedContentType = 'application/x-www-form-urlencoded';\n    return Headers;\n})();\nexports.Headers = Headers;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Headers.ts\n ** module id = 16\n ** module chunks = 0 2\n **/","/// <reference path=\"../../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar h = require('./Headers');\nvar log = require('../Log');\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    function Response(context, status, statusText, body, headers) {\n        var _this = this;\n        _super.call(this, context);\n        this.log = log.$get(context);\n        if (typeof (body) === 'string') {\n            body = body.replace(/\\r/g, '');\n            if (!headers) {\n                var tmp = body.split(Response.bodySeparator);\n                headers = (tmp.length > 1) ? tmp.shift() : {};\n                body = tmp.join(Response.bodySeparator);\n            }\n        }\n        /** @type {Response[]|object} */\n        this.data = null;\n        /** @type {object} */\n        this.json = null;\n        /** @type {Response[]} */\n        this.responses = [];\n        /** @type {Error} */\n        this.error = null;\n        //@see http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n        if (status == 1223)\n            status = 204;\n        this.status = status;\n        this.statusText = statusText;\n        this.body = body;\n        try {\n            // Step 1. Parse headers\n            if (typeof (headers) === 'string') {\n                (headers || '')\n                    .split('\\n')\n                    .forEach(function (header) {\n                    if (!header)\n                        return;\n                    var parts = header.split(Response.headerSeparator), name = parts.shift().trim();\n                    _this.setHeader(name, parts.join(Response.headerSeparator).trim());\n                });\n            }\n            else {\n                this.setHeaders(headers);\n            }\n            // Step 1.1. JEDI proxy sometimes may omit Content-Type header\n            if (!this.hasHeader(h.Headers.contentType))\n                this.setHeader(h.Headers.contentType, h.Headers.jsonContentType);\n            // Step 2. Parse body\n            if (this.isJson() && !!this.body && typeof (this.body) === 'string') {\n                this.json = JSON.parse(this.body);\n                this.data = this.json; // backwards compatibility\n                if (!this.checkStatus())\n                    this.error = new Error(this.getError());\n            }\n            else if (this.isMultipart()) {\n                // Step 2.1. Split multipart response\n                var boundary = this.getContentType().match(/boundary=([^;]+)/i)[1], parts = this.body.split(Response.boundarySeparator + boundary);\n                if (parts[0].trim() === '')\n                    parts.shift();\n                if (parts[parts.length - 1].trim() == Response.boundarySeparator)\n                    parts.pop();\n                // Step 2.2. Parse status info\n                var statusInfo = new Response(this.context, this.status, '', parts.shift());\n                // Step 2.3. Parse all other parts\n                this.responses = parts.map(function (part, i) {\n                    var status = statusInfo.data.response[i].status;\n                    return new Response(_this.context, status, '', part);\n                });\n                this.data = this.responses; // backwards compatibility\n            }\n            else {\n                this.data = this.body;\n            }\n        }\n        catch (e) {\n            this.log.error('Response.parseResponse(): Unable to parse data');\n            this.log.error(e.stack || e);\n            this.log.error(this.body);\n            this.error = e;\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    Response.prototype.isUnauthorized = function () {\n        return (this.status == 401);\n    };\n    Response.prototype.checkStatus = function () {\n        return this.status >= 200 && this.status < 300;\n    };\n    Response.prototype.getError = function () {\n        return this.data.message ||\n            this.data.error_description ||\n            this.data.description ||\n            'Unknown error';\n    };\n    Response.boundarySeparator = '--';\n    Response.headerSeparator = ':';\n    Response.bodySeparator = '\\n\\n';\n    return Response;\n})(h.Headers);\nexports.Response = Response;\nfunction $get(context, status, statusText, body, headers) {\n    return new Response(context, status, statusText, body, headers);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/http/Response.ts\n ** module id = 17\n ** module chunks = 0 2\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar observable = require('./Observable');\nvar platform = require('./Platform');\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription(context) {\n        _super.call(this, context);\n        this.events = {\n            notification: 'notification',\n            removeSuccess: 'removeSuccess',\n            removeError: 'removeError',\n            renewSuccess: 'renewSuccess',\n            renewError: 'renewError',\n            subscribeSuccess: 'subscribeSuccess',\n            subscribeError: 'subscribeError'\n        };\n        this.pubnub = null;\n        this.eventFilters = [];\n        this.timeout = null;\n        this.subscription = {\n            eventFilters: [],\n            expirationTime: '',\n            expiresIn: 0,\n            deliveryMode: {\n                transportType: 'PubNub',\n                encryption: false,\n                address: '',\n                subscriberKey: '',\n                secretKey: ''\n            },\n            id: '',\n            creationTime: '',\n            status: '',\n            uri: ''\n        };\n    }\n    Subscription.prototype.getPubnub = function () {\n        return this.context.getPubnub();\n    };\n    Subscription.prototype.getPlatform = function () {\n        return platform.$get(this.context);\n    };\n    /**\n     * Creates or updates subscription if there is an active one\n     * @param {{events?:string[]}} [options] New array of events\n     * @returns {Promise}\n     */\n    Subscription.prototype.register = function (options) {\n        if (this.isSubscribed()) {\n            return this.renew(options);\n        }\n        else {\n            return this.subscribe(options);\n        }\n    };\n    Subscription.prototype.addEvents = function (events) {\n        this.eventFilters = this.eventFilters.concat(events);\n        return this;\n    };\n    Subscription.prototype.setEvents = function (events) {\n        this.eventFilters = events;\n        return this;\n    };\n    Subscription.prototype.getFullEventFilters = function () {\n        var _this = this;\n        return this.eventFilters.map(function (event) {\n            return _this.getPlatform().apiUrl(event);\n        });\n    };\n    Subscription.prototype.subscribe = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve(_this.getPlatform().apiCall({\n                method: 'POST',\n                url: '/restapi/v1.0/subscription',\n                post: {\n                    eventFilters: _this.getFullEventFilters(),\n                    deliveryMode: {\n                        transportType: 'PubNub'\n                    }\n                }\n            }));\n        }).then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .subscribeAtPubnub()\n                .emit(_this.events.subscribeSuccess, ajax.data);\n            return ajax;\n        }).catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.subscribeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.renew = function (options) {\n        var _this = this;\n        options = options || {};\n        if (options.events)\n            this.eventFilters = options.events;\n        this.clearTimeout();\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            if (!_this.eventFilters || !_this.eventFilters.length)\n                throw new Error('Events are undefined');\n            resolve();\n        }).then(function () {\n            return _this.getPlatform().apiCall({\n                method: 'PUT',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id,\n                post: {\n                    eventFilters: _this.getFullEventFilters()\n                }\n            });\n        })\n            .then(function (ajax) {\n            _this.updateSubscription(ajax.data)\n                .emit(_this.events.renewSuccess, ajax.data);\n            return ajax;\n        })\n            .catch(function (e) {\n            _this.unsubscribe()\n                .emit(_this.events.renewError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.remove = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            async: true\n        }, options);\n        return new (this.context.getPromise())(function (resolve, reject) {\n            if (!_this.subscription || !_this.subscription.id)\n                throw new Error('Subscription ID is required');\n            resolve(_this.getPlatform().apiCall({\n                async: !!options.async,\n                // hook and has to be synchronous\n                method: 'DELETE',\n                url: '/restapi/v1.0/subscription/' + _this.subscription.id\n            }));\n        }).then(function (ajax) {\n            _this.unsubscribe()\n                .emit(_this.events.removeSuccess, ajax);\n            return ajax;\n        }).catch(function (e) {\n            _this.emit(_this.events.removeError, e);\n            throw e;\n        });\n    };\n    Subscription.prototype.destroy = function () {\n        this.unsubscribe();\n        this.log.info('RC.core.Subscription: Destroyed');\n        return _super.prototype.destroy.call(this);\n    };\n    Subscription.prototype.isSubscribed = function () {\n        return this.subscription &&\n            this.subscription.deliveryMode &&\n            this.subscription.deliveryMode.subscriberKey &&\n            this.subscription.deliveryMode.address;\n    };\n    Subscription.prototype.setTimeout = function () {\n        var _this = this;\n        this.utils.poll(function (next) {\n            if (Date.now() < _this.expireTime) {\n                return next();\n            }\n            _this.renew();\n        }, Subscription.pollInterval, this.timeout);\n    };\n    Subscription.prototype.clearTimeout = function () {\n        this.utils.stopPolling(this.timeout);\n    };\n    Subscription.prototype.updateSubscription = function (subscription) {\n        this.clearTimeout();\n        this.subscription = subscription;\n        this.expireTime = Date.now() + (this.subscription.expiresIn * 1000) - Subscription.renewHandicapMs;\n        this.setTimeout();\n        return this;\n    };\n    /**\n     * Remove subscription and disconnect from PUBNUB\n     */\n    Subscription.prototype.unsubscribe = function () {\n        this.clearTimeout();\n        if (this.pubnub && this.isSubscribed())\n            this.pubnub.unsubscribe({ channel: this.subscription.deliveryMode.address });\n        this.subscription = null;\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.decrypt = function (message) {\n        if (this.isSubscribed() && this.subscription.deliveryMode.encryptionKey) {\n            var PUBNUB = this.getPubnub();\n            message = PUBNUB.crypto_obj.decrypt(message, this.subscription.deliveryMode.encryptionKey, {\n                encryptKey: false,\n                keyEncoding: 'base64',\n                keyLength: 128,\n                mode: 'ecb'\n            });\n        }\n        return message;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.notify = function (message) {\n        this.emit(this.events.notification, this.decrypt(message));\n        return this;\n    };\n    /**\n     * Do not use this method! Internal use only\n     */\n    Subscription.prototype.subscribeAtPubnub = function () {\n        var _this = this;\n        if (!this.isSubscribed())\n            return this;\n        var PUBNUB = this.getPubnub();\n        this.pubnub = PUBNUB.init({\n            ssl: true,\n            subscribe_key: this.subscription.deliveryMode.subscriberKey\n        });\n        this.pubnub.ready();\n        this.pubnub.subscribe({\n            channel: this.subscription.deliveryMode.address,\n            message: function (message, env, channel) {\n                _this.log.info('RC.core.Subscription: Incoming message', message);\n                _this.notify(message);\n            },\n            connect: function () {\n                _this.log.info('RC.core.Subscription: PUBNUB connected');\n            }\n        });\n        return this;\n    };\n    Subscription.renewHandicapMs = 60 * 1000;\n    Subscription.pollInterval = 10 * 1000;\n    return Subscription;\n})(observable.Observable);\nexports.Subscription = Subscription;\nfunction $get(context) {\n    return new Subscription(context);\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Subscription.ts\n ** module id = 18\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar utils = require('./Utils');\nvar Validator = (function () {\n    function Validator(context) {\n        this.context = context;\n        this.utils = utils.$get(context);\n    }\n    Validator.prototype.validate = function (validators) {\n        var result = {\n            errors: {},\n            isValid: true\n        };\n        result.errors = validators.reduce(function (errors, validator) {\n            var res = validator.validator();\n            if (res.length > 0) {\n                result.isValid = false;\n                errors[validator.field] = errors[validator.field] || [];\n                errors[validator.field] = errors[validator.field].concat(res);\n            }\n            return errors;\n        }, {});\n        return result;\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * @deprecated\n     */\n    Validator.prototype.email = function (value, multiple) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isEmail(value, multiple) ? [] : [new Error('Value has to be a valid email')];\n        };\n    };\n    /**\n     * It is not recommended to have any kinds of complex validators at front end\n     * TODO International phone numbers\n     * @deprecated\n     */\n    Validator.prototype.phone = function (value) {\n        var _this = this;\n        return function () {\n            if (!value)\n                return [];\n            return _this.utils.isPhoneNumber(value) ? [] : [new Error('Value has to be a valid US phone number')];\n        };\n    };\n    Validator.prototype.required = function (value) {\n        return function () {\n            return !value ? [new Error('Field is required')] : [];\n        };\n    };\n    Validator.prototype.length = function (value, max, min) {\n        return function () {\n            var errors = [];\n            if (!value)\n                return errors;\n            value = value.toString();\n            if (min && value.length < min)\n                errors.push(new Error('Minimum length of ' + min + ' characters is required'));\n            if (max && value.length > max)\n                errors.push(new Error('Maximum length of ' + max + ' characters is required'));\n            return errors;\n        };\n    };\n    return Validator;\n})();\nexports.Validator = Validator;\nfunction $get(context) {\n    return context.createSingleton('Validator', function () {\n        return new Validator(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/core/Validator.ts\n ** module id = 19\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Account = (function (_super) {\n    __extends(Account, _super);\n    function Account() {\n        _super.apply(this, arguments);\n    }\n    Account.prototype.createUrl = function () {\n        return '/account/~';\n    };\n    return Account;\n})(helper.Helper);\nexports.Account = Account;\nfunction $get(context) {\n    return context.createSingleton('Account', function () {\n        return new Account(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Account.ts\n ** module id = 20\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar BlockedNumber = (function (_super) {\n    __extends(BlockedNumber, _super);\n    function BlockedNumber(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    BlockedNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/blocked-number' +\n            (id ? '/' + id : '');\n    };\n    BlockedNumber.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'phoneNumber', validator: this.validator.phone(item.phoneNumber) },\n            { field: 'phoneNumber', validator: this.validator.required(item.phoneNumber) },\n            { field: 'name', validator: this.validator.required(item.name) }\n        ]);\n    };\n    return BlockedNumber;\n})(helper.Helper);\nexports.BlockedNumber = BlockedNumber;\nfunction $get(context) {\n    return context.createSingleton('BlockedNumber', function () {\n        return new BlockedNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/BlockedNumber.ts\n ** module id = 21\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar presence = require('./Presence');\nvar contact = require('./Contact');\nvar Call = (function (_super) {\n    __extends(Call, _super);\n    function Call(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.contact = contact.$get(context);\n        this.presence = presence.$get(context);\n    }\n    Call.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (!('personal' in options) && !('extensionId' in options))\n            options.personal = true;\n        return '/account/~/' +\n            (options.personal || options.extensionId ? ('extension/' + (options.extensionId || '~') + '/') : '') +\n            (options.active ? 'active-calls' : 'call-log') +\n            (id ? '/' + id : '');\n    };\n    Call.prototype.getSessionId = function (call) {\n        return (call && call.sessionId);\n    };\n    Call.prototype.isInProgress = function (call) {\n        return (call && call.result == 'In Progress');\n    };\n    Call.prototype.isAlive = function (call) {\n        return (call && call.availability == 'Alive');\n    };\n    Call.prototype.isInbound = function (call) {\n        return (call && call.direction == 'Inbound');\n    };\n    Call.prototype.isOutbound = function (call) {\n        return !this.isInbound(call);\n    };\n    Call.prototype.isMissed = function (call) {\n        return (call && call.result == 'Missed');\n    };\n    Call.prototype.isFindMe = function (call) {\n        return (call && call.action == 'FindMe');\n    };\n    Call.prototype.getCallerInfo = function (call) {\n        return this.isInbound(call) ? call.from : call.to;\n    };\n    Call.prototype.getAllCallerInfos = function (call) {\n        return [this.getCallerInfo(call)].concat(this.isInbound(call) ? call.to : call.from);\n    };\n    Call.prototype.formatDuration = function (call) {\n        function addZero(v) {\n            return (v < 10) ? '0' + v : v;\n        }\n        var duration = parseInt(call.duration), hours = Math.floor(duration / (60 * 60)), mins = Math.floor((duration % (60 * 60)) / 60), secs = Math.floor(duration % 60);\n        return (hours ? hours + ':' : '') + addZero(mins) + ':' + addZero(secs);\n    };\n    Call.prototype.filter = function (options) {\n        options = this.utils.extend({\n            alive: true,\n            direction: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            //{condition: options.alive, filterFn: this.isAlive},\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'type', condition: options.type }\n        ]);\n    };\n    Call.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'startTime'\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in\n     * all calls Warning, this function may be performance-consuming, reduce the amount of items passed to contacts\n     * and calls\n     */\n    Call.prototype.attachContacts = function (contacts, calls, options) {\n        var _this = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = calls.reduce(function (callerInfos, call) {\n            return callerInfos.concat(_this.getAllCallerInfos(call));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    /**\n     * Check whether pair of calls are two legs of RingOut\n     */\n    Call.prototype.checkMergeability = function (outboundRingOutCall, inboundCall, options) {\n        var getTime = function (dateString) {\n            return (new Date(dateString)).getTime();\n        };\n        return ((!options.strict || outboundRingOutCall.action && outboundRingOutCall.action.toLowerCase().indexOf('ringout') != -1) &&\n            // Check directions\n            outboundRingOutCall.direction == 'Outbound' &&\n            inboundCall.direction == 'Inbound' &&\n            // Check that start times are equal or close enough\n            ((!inboundCall.startTime && !outboundRingOutCall.startTime) || Math.abs(getTime(inboundCall.startTime) - getTime(outboundRingOutCall.startTime)) < (options.maxStartTimeDiscrepancy || 5000)) &&\n            // Check that numbers match\n            inboundCall.from.phoneNumber == outboundRingOutCall.to.phoneNumber &&\n            (inboundCall.to.phoneNumber == outboundRingOutCall.from.phoneNumber || inboundCall.to.name == outboundRingOutCall.from.name) //TODO Maybe name check is not required\n        );\n    };\n    Call.prototype.combineCalls = function (outboundRingOutCall, inboundCall, options) {\n        options = options || {};\n        var result = [];\n        outboundRingOutCall.hasSubsequent = true;\n        if (options.merge) {\n            outboundRingOutCall.duration = (outboundRingOutCall.duration > inboundCall.duration) ? outboundRingOutCall.duration : inboundCall.duration;\n            // TODO Usually information from inbound call is more accurate for unknown reason\n            outboundRingOutCall.from = inboundCall.to;\n            outboundRingOutCall.to = inboundCall.from;\n            // Push only one \"merged\" outbound call\n            result.push(outboundRingOutCall);\n        }\n        else {\n            // Mark next call as subsequent\n            inboundCall.subsequent = true;\n            inboundCall.startTime = outboundRingOutCall.startTime; // Needed for sort\n            // Push both calls, first outbound then inbound\n            result.push(outboundRingOutCall);\n            result.push(inboundCall);\n        }\n        return result;\n    };\n    /**\n     * (!) Experimental (!)\n     *\n     * Calls in Recent Calls (Call Log) or Active Calls arrays can be combined if they are, for example, two legs of\n     * one RingOut. The logic that stands behind this process is simple:\n     *\n     * - Calls must have opposite directions\n     * - Must have been started within a certain limited time frame\n     * - Must have same phone numbers in their Caller Info sections (from/to)\n     *\n     * ```js\n     * var processedCalls = Call.processCalls(callsArray, {strict: false, merge: true});\n     * ```\n     *\n     * Flags:\n     *\n     * - if `strict` is `true` then only calls with RingOut in `action` property will be affected\n     * - `merge` &mdash; controls whether to merge calls (reducing the length of array) or give them `subsequent`\n     *     and `hasSubsequent` properties\n     */\n    Call.prototype.processCalls = function (calls, options) {\n        var processedCalls = [], callsToMerge = [], self = this;\n        // Iterate through calls\n        calls.forEach(function (call) {\n            var merged = false;\n            call.subsequent = false;\n            call.hasSubsequent = false;\n            // Second cycle to find other leg\n            // It is assumed that call is the outbound, secondCall is inbound\n            calls.some(function (secondCall) {\n                if (call === secondCall)\n                    return false;\n                if (self.checkMergeability(call, secondCall, options)) {\n                    // Push to result array merged call\n                    processedCalls = processedCalls.concat(self.combineCalls(call, secondCall, options));\n                    // Push to array calls that are merged\n                    callsToMerge.push(call);\n                    callsToMerge.push(secondCall);\n                    merged = true;\n                }\n                return merged;\n            });\n        });\n        // After all calls are merged, add non-merged calls\n        calls.forEach(function (call) {\n            if (callsToMerge.indexOf(call) == -1)\n                processedCalls.push(call);\n        });\n        return processedCalls;\n    };\n    /**\n     * Converts Presence's ActiveCall array into regular Calls array\n     */\n    Call.prototype.parsePresenceCalls = function (activeCalls) {\n        var _this = this;\n        return activeCalls.map(function (activeCall) {\n            return {\n                id: activeCall.id,\n                uri: '',\n                sessionId: activeCall.sessionId,\n                from: { phoneNumber: activeCall.from },\n                to: { phoneNumber: activeCall.to },\n                direction: activeCall.direction,\n                startTime: '',\n                duration: 0,\n                type: '',\n                action: '',\n                result: _this.presence.isCallInProgress(activeCall) ? 'In Progress' : activeCall.telephonyStatus,\n                telephonyStatus: activeCall.telephonyStatus // non-standard property for compatibility\n            };\n        });\n    };\n    Call.prototype.getSignature = function (call) {\n        var cleanup = function (phoneNumber) {\n            return (phoneNumber || '').toString().replace(/[^0-9]/ig, '');\n        };\n        return call.direction + '|' + (call.from && cleanup(call.from.phoneNumber)) + '|' + (call.to && cleanup(call.to.phoneNumber));\n    };\n    Call.prototype.mergePresenceCalls = function (presenceCalls, presence) {\n        var currentDate = new Date(), activeCalls = this\n            .parsePresenceCalls(presence && presence.activeCalls || [])\n            .map(function (call) {\n            // delete property to make sure it is skipped during merge\n            delete call.startTime;\n            return call;\n        });\n        presenceCalls = this.merge(presenceCalls || [], activeCalls, this.getSessionId, true);\n        presenceCalls.forEach(function (call) {\n            if (!call.startTime)\n                call.startTime = currentDate.toISOString();\n        });\n        return presenceCalls;\n    };\n    Call.prototype.mergeAll = function (presenceCalls, calls, activeCalls) {\n        // First, merge calls into presence calls\n        var presenceAndCalls = this.merge(presenceCalls || [], calls || [], this.getSessionId, true);\n        // Second, merge activeCalls into previous result\n        return this.merge(presenceAndCalls, activeCalls || [], this.getSessionId, true);\n    };\n    return Call;\n})(helper.Helper);\nexports.Call = Call;\nfunction $get(context) {\n    return context.createSingleton('Call', function () {\n        return new Call(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Call.ts\n ** module id = 22\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar subscription = require('../core/Subscription');\nvar extension = require('./Extension');\nvar Presence = (function (_super) {\n    __extends(Presence, _super);\n    function Presence(context) {\n        _super.call(this, context);\n        this.extension = extension.$get(context);\n    }\n    Presence.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (id || '~') + '/presence' + (options.detailed ? '?detailedTelephonyState=true' : '');\n    };\n    Presence.prototype.getId = function (presence) {\n        return presence && (this.extension.getId(presence.extension) || presence.extensionId);\n    };\n    Presence.prototype.isAvailable = function (presence) {\n        return presence && presence.presenceStatus == 'Available';\n    };\n    Presence.prototype.getSubscription = function (options, id) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options, id)]);\n    };\n    Presence.prototype.updateSubscription = function (subscription, presences, options) {\n        var _this = this;\n        var events = presences.map(this.getId, this).map(function (id) {\n            return _this.createUrl(options, id);\n        }, this);\n        subscription.addEvents(events);\n        return subscription;\n    };\n    Presence.prototype.attachToExtensions = function (extensions, presences, merge) {\n        var _this = this;\n        var index = this.index(presences);\n        extensions.forEach(function (ex) {\n            var presence = index[_this.extension.getId(ex)];\n            if (presence) {\n                if ('presence' in ex && merge) {\n                    _this.utils.extend(ex.presence, presence);\n                }\n                else {\n                    ex.presence = presence;\n                }\n            }\n        }, this);\n        return this;\n    };\n    Presence.prototype.isCallInProgress = function (presenceCall) {\n        return (presenceCall && presenceCall.telephonyStatus != 'NoCall');\n    };\n    return Presence;\n})(helper.Helper);\nexports.Presence = Presence;\nfunction $get(context) {\n    return context.createSingleton('Presence', function () {\n        return new Presence(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Presence.ts\n ** module id = 23\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar Extension = (function (_super) {\n    __extends(Extension, _super);\n    function Extension(context) {\n        _super.call(this, context);\n        this.type = {\n            department: 'Department',\n            user: 'User',\n            announcement: 'Announcement',\n            voicemail: 'Voicemail'\n        };\n        this.list = list.$get(context);\n    }\n    Extension.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~' +\n            (options.departmentId ? '/department/' + options.departmentId + '/members' : '/extension') +\n            (id ? '/' + id : '');\n    };\n    Extension.prototype.isUser = function (extension) {\n        return extension && extension.type == this.type.user;\n    };\n    Extension.prototype.isDepartment = function (extension) {\n        return extension && extension.type == this.type.department;\n    };\n    Extension.prototype.isAnnouncement = function (extension) {\n        return extension && extension.type == this.type.announcement;\n    };\n    Extension.prototype.isVoicemail = function (extension) {\n        return extension && extension.type == this.type.voicemail;\n    };\n    Extension.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'extensionNumber',\n            compareFn: this.list.numberComparator\n        }, options));\n    };\n    Extension.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            type: ''\n        }, options);\n        return this.list.filter([\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.search.toLocaleLowerCase(),\n                filterFn: this.list.containsFilter,\n                extractFn: function (item) {\n                    return (item.name && (item.name.toLocaleLowerCase() + ' ')) +\n                        (item.extensionNumber && item.extensionNumber.toString().toLocaleLowerCase());\n                }\n            }\n        ]);\n    };\n    return Extension;\n})(helper.Helper);\nexports.Extension = Extension;\nfunction $get(context) {\n    return context.createSingleton('Extension', function () {\n        return new Extension(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Extension.ts\n ** module id = 24\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar list = require('../core/List');\nvar Contact = (function (_super) {\n    __extends(Contact, _super);\n    function Contact(context) {\n        _super.call(this, context);\n        this.phoneFields = [\n            'homePhone',\n            'homePhone2',\n            'businessPhone',\n            'businessPhone2',\n            'mobilePhone',\n            'companyPhone',\n            'assistantPhone',\n            'carPhone',\n            'otherPhone',\n            'callbackPhone'\n        ];\n        this.faxFields = [\n            'businessFax',\n            'otherFax'\n        ];\n        this.addressFields = [\n            'homeAddress',\n            'businessAddress',\n            'otherAddress'\n        ];\n        this.addressSubFields = [\n            'street',\n            'city',\n            'state',\n            'zip'\n        ];\n        this.nameFields = [\n            'firstName',\n            'middleName',\n            'lastName',\n            'nickName'\n        ];\n        this.otherFields = [\n            'company',\n            'jobTitle',\n            'webPage',\n            'notes'\n        ];\n        this.emailFields = [\n            'email',\n            'email2',\n            'email3'\n        ];\n        this.list = list.$get(context);\n        this.validator = validator.$get(context);\n    }\n    Contact.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' +\n            (options.extensionId ? options.extensionId : '~') +\n            '/address-book';\n        if (options.sync)\n            return root + '-sync';\n        return root +\n            (options.groupId ? '/group/' + options.groupId + '/contact' : '/contact') +\n            (id ? '/' + id : '');\n    };\n    /**\n     * Returns all values of the given fields if value exists\n     */\n    Contact.prototype.getFieldValues = function (where, fields, asHash) {\n        return fields.reduce(function (result, field) {\n            if (where && where[field]) {\n                if (asHash) {\n                    result[field] = where[field];\n                }\n                else {\n                    result.push(where[field]);\n                }\n            }\n            return result;\n        }, asHash ? {} : []);\n    };\n    Contact.prototype.getFullName = function (contact) {\n        return this.getFieldValues(contact, this.nameFields).join(' ');\n    };\n    Contact.prototype.getEmails = function (contact, asHash) {\n        return this.getFieldValues(contact, this.emailFields, asHash);\n    };\n    Contact.prototype.getPhones = function (contact, asHash) {\n        return this.getFieldValues(contact, this.phoneFields, asHash);\n    };\n    Contact.prototype.getFaxes = function (contact, asHash) {\n        return this.getFieldValues(contact, this.faxFields, asHash);\n    };\n    Contact.prototype.getAddresses = function (contact, asHash) {\n        return this.getFieldValues(contact, this.addressFields, asHash);\n    };\n    Contact.prototype.isAlive = function (contact) {\n        return (contact.availability == 'Alive');\n    };\n    /**\n     * Matches a contact against a given string, returns null if nothing found\n     */\n    Contact.prototype.match = function (contact, string, options) {\n        var _this = this;\n        options = this.utils.extend({\n            fields: [].concat(this.nameFields, this.emailFields, this.phoneFields, this.faxFields, this.otherFields),\n            inAddresses: true,\n            transformFn: function (value, options) {\n                return value ? value.toString().toLocaleLowerCase() : '';\n            },\n            strict: false\n        }, options);\n        string = options.transformFn(string, options);\n        var found = null;\n        if (!string)\n            return found;\n        var matchWith = function (value) {\n            // skip unnecessary cycles if match has been found\n            if (found)\n                return;\n            var transformed = options.transformFn(value, options);\n            if (!transformed)\n                return;\n            var match = (options.strict ? transformed == string : transformed.indexOf(string) > -1);\n            if (match)\n                found = value;\n        };\n        // Search in fields\n        options.fields.forEach(function (field) {\n            matchWith(contact[field]);\n        });\n        // Search in addresses, skip unnecessary cycles if match has been found\n        if (options.inAddresses && !found)\n            this.addressFields.forEach(function (field) {\n                // skip unnecessary cycles if match has been found or no field value\n                if (!contact[field] || found)\n                    return;\n                _this.addressSubFields.forEach(function (subField) {\n                    matchWith(contact[field][subField]);\n                });\n            });\n        return found;\n    };\n    /**\n     * Matches a contact against a given phone number, returns null if nothing found\n     */\n    Contact.prototype.matchAsPhone = function (contact, phone, options) {\n        return this.match(contact, phone, this.utils.extend({\n            fields: [].concat(this.phoneFields, this.faxFields),\n            inAddresses: false,\n            transformFn: function (value, options) {\n                return value ? value.toString().replace(/[^\\d\\w]/ig, '') : ''; //TODO Trickier removal reqired;\n            },\n            strict: false\n        }, options));\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all given {ICallerInfo}\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and callerInfos\n     */\n    Contact.prototype.attachToCallerInfos = function (callerInfos, contacts, options) {\n        var self = this, callerInfoIndex = this.index(callerInfos, function (callerInfo) {\n            return callerInfo.phoneNumber;\n        }, true);\n        this.utils.forEach(callerInfoIndex, function (indexedCallerInfos, phoneNumber) {\n            var foundContact = null, foundPhone = null;\n            contacts.some(function (contact) {\n                foundPhone = self.matchAsPhone(contact, phoneNumber, options);\n                if (foundPhone)\n                    foundContact = contact;\n                return foundPhone;\n            });\n            if (foundContact) {\n                indexedCallerInfos.forEach(function (callerInfo) {\n                    callerInfo.contact = foundContact;\n                    callerInfo.contactPhone = foundPhone;\n                });\n            }\n        });\n    };\n    Contact.prototype.comparator = function (options) {\n        var _this = this;\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (contact, options) {\n                return _this.getFullName(contact);\n            }\n        }, options));\n    };\n    /**\n     * TODO Add filtering by group http://jira.ringcentral.com/browse/SDK-4\n     */\n    Contact.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            alive: true,\n            startsWith: '',\n            phonesOnly: false,\n            faxesOnly: false\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { condition: options.startsWith, filterFn: function (item, opts) { return _this.match(item, opts.condition); } },\n            { condition: options.phonesOnly, filterFn: function (item, opts) { return (_this.getPhones(item).length > 0); } },\n            { condition: options.faxesOnly, filterFn: function (item, opts) { return (_this.getFaxes(item).length > 0); } }\n        ]);\n    };\n    Contact.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'firstName', validator: this.validator.required(item.firstName) },\n            { field: 'lastName', validator: this.validator.required(item.lastName) },\n            { field: 'email', validator: this.validator.email(item.email) },\n            { field: 'email2', validator: this.validator.email(item.email2) },\n            { field: 'email3', validator: this.validator.email(item.email3) }\n        ]);\n    };\n    return Contact;\n})(helper.Helper);\nexports.Contact = Contact;\nfunction $get(context) {\n    return context.createSingleton('Contact', function () {\n        return new Contact(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Contact.ts\n ** module id = 25\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar ContactGroup = (function (_super) {\n    __extends(ContactGroup, _super);\n    function ContactGroup(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    ContactGroup.prototype.createUrl = function (options, id) {\n        return '/account/~/extension/~/address-book/group' + (id ? '/' + id : '');\n    };\n    ContactGroup.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'groupName', validator: this.validator.required(item && item.groupName) }\n        ]);\n    };\n    return ContactGroup;\n})(helper.Helper);\nexports.ContactGroup = ContactGroup;\nfunction $get(context) {\n    return context.createSingleton('ContactGroup', function () {\n        return new ContactGroup(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ContactGroup.ts\n ** module id = 26\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Conferencing = (function (_super) {\n    __extends(Conferencing, _super);\n    function Conferencing() {\n        _super.apply(this, arguments);\n    }\n    Conferencing.prototype.createUrl = function () {\n        return '/account/~/extension/~/conferencing';\n    };\n    return Conferencing;\n})(helper.Helper);\nexports.Conferencing = Conferencing;\nfunction $get(context) {\n    return context.createSingleton('Conferencing', function () {\n        return new Conferencing(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Conferencing.ts\n ** module id = 27\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Country = (function (_super) {\n    __extends(Country, _super);\n    function Country() {\n        _super.apply(this, arguments);\n    }\n    Country.prototype.createUrl = function (options, id) {\n        return '/dictionary/country';\n    };\n    return Country;\n})(helper.Helper);\nexports.Country = Country;\nfunction $get(context) {\n    return context.createSingleton('Country', function () {\n        return new Country(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Country.ts\n ** module id = 28\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar extension = require('./Extension');\nvar deviceModel = require('./DeviceModel');\nvar Device = (function (_super) {\n    __extends(Device, _super);\n    function Device(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n        this.extension = extension.$get(context);\n        this.deviceModel = deviceModel.$get(context);\n    }\n    Device.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.order)\n            return '/account/~/order';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/device' +\n            (id ? '/' + id : '');\n    };\n    /**\n     * @param {IDevice} item\n     */\n    Device.prototype.validate = function (item) {\n        return this.validator.validate([\n            {\n                field: 'emergencyServiceAddress-street',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.street)\n            },\n            {\n                field: 'emergencyServiceAddress-city',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.city)\n            },\n            {\n                field: 'emergencyServiceAddress-state',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.state)\n            },\n            {\n                field: 'emergencyServiceAddress-country',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.country)\n            },\n            {\n                field: 'emergencyServiceAddress-zip',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.zip)\n            },\n            {\n                field: 'emergencyServiceAddress-customerName',\n                validator: this.validator.required(item && item.emergencyServiceAddress && item.emergencyServiceAddress.customerName)\n            },\n            { field: 'extension', validator: this.validator.required(this.extension.getId(item && item.extension)) },\n            { field: 'model', validator: this.validator.required(this.deviceModel.getId(item && item.model)) }\n        ]);\n    };\n    return Device;\n})(helper.Helper);\nexports.Device = Device;\nfunction $get(context) {\n    return context.createSingleton('Device', function () {\n        return new Device(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Device.ts\n ** module id = 29\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar DeviceModel = (function (_super) {\n    __extends(DeviceModel, _super);\n    function DeviceModel() {\n        _super.apply(this, arguments);\n    }\n    DeviceModel.prototype.getId = function (device) {\n        return device ? device.sku : null;\n    };\n    DeviceModel.prototype.createUrl = function (options, id) {\n        return '/dictionary/device';\n    };\n    return DeviceModel;\n})(helper.Helper);\nexports.DeviceModel = DeviceModel;\nfunction $get(context) {\n    return context.createSingleton('DeviceModel', function () {\n        return new DeviceModel(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/DeviceModel.ts\n ** module id = 30\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar ForwardingNumber = (function (_super) {\n    __extends(ForwardingNumber, _super);\n    function ForwardingNumber(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n    }\n    ForwardingNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/forwarding-number' + (id ? '/' + id : '');\n    };\n    ForwardingNumber.prototype.getId = function (forwardingNumber) {\n        return forwardingNumber && (forwardingNumber.id || (forwardingNumber.phoneNumber)); //TODO @exceptionalCase\n    };\n    ForwardingNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber && !!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    ForwardingNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'label'\n        }, options));\n    };\n    ForwardingNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            features: []\n        }, options);\n        return this.list.filter([{\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }]);\n    };\n    return ForwardingNumber;\n})(helper.Helper);\nexports.ForwardingNumber = ForwardingNumber;\nfunction $get(context) {\n    return context.createSingleton('ForwardingNumber', function () {\n        return new ForwardingNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ForwardingNumber.ts\n ** module id = 31\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Language = (function (_super) {\n    __extends(Language, _super);\n    function Language() {\n        _super.apply(this, arguments);\n    }\n    Language.prototype.createUrl = function (options, id) {\n        return '/dictionary/language';\n    };\n    return Language;\n})(helper.Helper);\nexports.Language = Language;\nfunction $get(context) {\n    return context.createSingleton('Language', function () {\n        return new Language(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Language.ts\n ** module id = 32\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar state = require('./State');\nvar Location = (function (_super) {\n    __extends(Location, _super);\n    function Location(context) {\n        _super.call(this, context);\n        this.list = list.$get(context);\n        this.state = state.$get(context);\n    }\n    Location.prototype.createUrl = function () {\n        return '/dictionary/location';\n    };\n    Location.prototype.filter = function (options) {\n        var _this = this;\n        var uniqueNPAs = [];\n        options = this.utils.extend({\n            stateId: '',\n            onlyUniqueNPA: false\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.stateId,\n                filterFn: function (item, opts) {\n                    return (_this.state.getId(item.state) == opts.condition);\n                }\n            },\n            {\n                condition: options.onlyUniqueNPA,\n                filterFn: function (item, opts) {\n                    if (uniqueNPAs.indexOf(item.npa) == -1) {\n                        uniqueNPAs.push(item.npa);\n                        return true;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n            }\n        ]);\n    };\n    Location.prototype.comparator = function (options) {\n        options = this.utils.extend({\n            sortBy: 'npa'\n        }, options);\n        if (options.sortBy == 'nxx') {\n            options.extractFn = function (item) {\n                return (parseInt(item.npa) * 1000000) + parseInt(item.nxx);\n            };\n            options.compareFn = this.list.numberComparator;\n        }\n        return this.list.comparator(options);\n    };\n    return Location;\n})(helper.Helper);\nexports.Location = Location;\nfunction $get(context) {\n    return context.createSingleton('Location', function () {\n        return new Location(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Location.ts\n ** module id = 33\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar country = require('./Country');\nvar State = (function (_super) {\n    __extends(State, _super);\n    function State(context) {\n        _super.call(this, context);\n        this.countryHelper = country.$get(context);\n        this.list = list.$get(context);\n    }\n    State.prototype.createUrl = function () {\n        return '/dictionary/state';\n    };\n    State.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            countryId: ''\n        }, options);\n        return this.list.filter([\n            {\n                condition: options.countryId,\n                filterFn: function (item, opts) {\n                    return (_this.countryHelper.getId(item.country) == opts.condition);\n                }\n            }\n        ]);\n    };\n    return State;\n})(helper.Helper);\nexports.State = State;\nfunction $get(context) {\n    return context.createSingleton('State', function () {\n        return new State(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/State.ts\n ** module id = 34\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar validator = require('../core/Validator');\nvar subscription = require('../core/Subscription');\nvar platform = require('../core/Platform');\nvar contact = require('./Contact');\nvar Message = (function (_super) {\n    __extends(Message, _super);\n    function Message(context) {\n        _super.call(this, context);\n        this.contact = contact.$get(context);\n        this.list = list.$get(context);\n        this.platform = platform.$get(context);\n        this.validator = validator.$get(context);\n    }\n    /**\n     *\n     * @exceptionalCase Different endpoint when creating SMS/Pager\n     */\n    Message.prototype.createUrl = function (options, id) {\n        options = options || {};\n        var root = '/account/~/extension/' + (options.extensionId || '~');\n        if (options.fax)\n            return root + '/fax';\n        if (options.sms)\n            return root + '/sms';\n        if (options.pager)\n            return root + '/company-pager';\n        if (options.sync)\n            return root + '/message-sync';\n        return root + '/message-store' + (id ? '/' + id : '');\n    };\n    Message.prototype.isInbound = function (message) {\n        return (message && message.direction == 'Inbound');\n    };\n    Message.prototype.isOutbound = function (message) {\n        return !this.isInbound(message);\n    };\n    Message.prototype.isSMS = function (message) {\n        return (message && message.type == 'SMS');\n    };\n    Message.prototype.isPager = function (message) {\n        return (message && message.type == 'Pager');\n    };\n    Message.prototype.isVoiceMail = function (message) {\n        return (message && message.type == 'VoiceMail');\n    };\n    Message.prototype.isFax = function (message) {\n        return (message && message.type == 'Fax');\n    };\n    Message.prototype.isAlive = function (message) {\n        //return (this.availability != 'Deleted' && this.availability != 'Purged');\n        return (message && message.availability == 'Alive');\n    };\n    Message.prototype.isRead = function (message) {\n        return (message.readStatus == 'Read');\n    };\n    Message.prototype.setIsRead = function (message, isRead) {\n        message.readStatus = (!!isRead) ? 'Read' : 'Unread';\n        return message;\n    };\n    Message.prototype.getAttachmentUrl = function (message, i) {\n        return message.attachments[i] ? this.platform.apiUrl(message.attachments[i].uri, {\n            addMethod: 'GET',\n            addServer: true,\n            addToken: true\n        }) : '';\n    };\n    Message.prototype.getAttachmentContentType = function (message, i) {\n        return message.attachments[i] ? message.attachments[i].contentType : '';\n    };\n    Message.prototype.getSubscription = function (options) {\n        return subscription.$get(this.context).setEvents([this.createUrl(options)]);\n    };\n    /**\n     * Returns from-phones if inbound (oterwise to-phones)\n     */\n    Message.prototype.getCallerInfos = function (message) {\n        return this.isInbound(message) ? [message.from] : message.to;\n    };\n    /**\n     * Returns first from-phones if inbound (oterwise to-phones), then vice-versa\n     */\n    Message.prototype.getAllCallerInfos = function (message) {\n        return this.getCallerInfos(message).concat(this.isInbound(message) ? message.to : [message.from]);\n    };\n    /**\n     * TODO Compare as dates\n     */\n    Message.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            sortBy: 'creationTime'\n        }, options));\n    };\n    Message.prototype.filter = function (options) {\n        options = this.utils.extend({\n            search: '',\n            alive: true,\n            direction: '',\n            conversationId: '',\n            readStatus: ''\n        }, options);\n        return this.list.filter([\n            { condition: options.alive, filterFn: this.isAlive },\n            { filterBy: 'type', condition: options.type },\n            { filterBy: 'direction', condition: options.direction },\n            { filterBy: 'conversationId', condition: options.conversationId },\n            { filterBy: 'readStatus', condition: options.readStatus },\n            { filterBy: 'subject', condition: options.search, filterFn: this.list.containsFilter }\n        ]);\n    };\n    /**\n     * Injects contact field with appropriate {IContact} data structure into all callerInfos found in all messages\n     * Warning, this function may be performance-consuming, reduce the amount of items passed to contacts and messages\n     */\n    Message.prototype.attachContacts = function (contacts, messages, options) {\n        var self = this;\n        // Flatten all caller infos from all messages\n        var callerInfos = messages.reduce(function (callerInfos, message) {\n            return callerInfos.concat(self.getAllCallerInfos(message));\n        }, []);\n        this.contact.attachToCallerInfos(callerInfos, contacts, options);\n    };\n    Message.prototype.shorten = function (message) {\n        return {\n            from: message.from,\n            to: message.to,\n            text: message.subject\n        };\n    };\n    Message.prototype.validateSMS = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to[0].phoneNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.phoneNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    Message.prototype.validatePager = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(this.utils.getProperty(item, 'to.extensionNumber')) },\n            { field: 'from', validator: this.validator.required(this.utils.getProperty(item, 'from.extensionNumber')) },\n            { field: 'subject', validator: this.validator.required(this.utils.getProperty(item, 'subject')) },\n            { field: 'subject', validator: this.validator.length(this.utils.getProperty(item, 'subject'), 160) }\n        ]);\n    };\n    return Message;\n})(helper.Helper);\nexports.Message = Message;\nfunction $get(context) {\n    return context.createSingleton('Message', function () {\n        return new Message(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Message.ts\n ** module id = 35\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar list = require('../core/List');\nvar extension = require('./Extension');\nvar PhoneNumber = (function (_super) {\n    __extends(PhoneNumber, _super);\n    function PhoneNumber(context) {\n        _super.call(this, context);\n        this.tollFreeAreaCodes = ['800', '844', '855', '866', '877', '888'];\n        this.extension = extension.$get(context);\n        this.list = list.$get(context);\n    }\n    PhoneNumber.prototype.createUrl = function (options, id) {\n        options = options || {};\n        if (options.lookup)\n            return '/number-pool/lookup';\n        return '/account/~' +\n            (options.extensionId ? '/extension/' + options.extensionId : '') +\n            '/phone-number' +\n            (id ? '/' + id : '');\n    };\n    PhoneNumber.prototype.isSMS = function (phoneNumber) {\n        return this.hasFeature(phoneNumber, 'SmsSender');\n    };\n    PhoneNumber.prototype.hasFeature = function (phoneNumber, feature) {\n        return (!!phoneNumber.features && phoneNumber.features.indexOf(feature) != -1);\n    };\n    PhoneNumber.prototype.reserve = function (phoneNumber, date) {\n        phoneNumber.reservedTill = new Date(date).toISOString();\n    };\n    PhoneNumber.prototype.unreserve = function (phoneNumber) {\n        phoneNumber.reservedTill = null;\n    };\n    PhoneNumber.prototype.comparator = function (options) {\n        return this.list.comparator(this.utils.extend({\n            extractFn: function (item) {\n                return item.usageType + '-' +\n                    item.paymentType + '-' +\n                    item.type;\n            }\n        }, options));\n    };\n    /**\n     * TODO Add other filtering methods http://jira.ringcentral.com/browse/SDK-5\n     */\n    PhoneNumber.prototype.filter = function (options) {\n        var _this = this;\n        options = this.utils.extend({\n            usageType: '',\n            paymentType: '',\n            type: '',\n            features: []\n        }, options);\n        return this.list.filter([\n            { filterBy: 'usageType', condition: options.usageType },\n            { filterBy: 'paymentType', condition: options.paymentType },\n            { filterBy: 'type', condition: options.type },\n            {\n                condition: options.features.length,\n                filterFn: function (item) {\n                    return options.features.some(function (feature) {\n                        return _this.hasFeature(item, feature);\n                    });\n                }\n            }\n        ]);\n    };\n    return PhoneNumber;\n})(helper.Helper);\nexports.PhoneNumber = PhoneNumber;\nfunction $get(context) {\n    return context.createSingleton('PhoneNumber', function () {\n        return new PhoneNumber(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/PhoneNumber.ts\n ** module id = 36\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar validator = require('../core/Validator');\nvar Ringout = (function (_super) {\n    __extends(Ringout, _super);\n    function Ringout(context) {\n        _super.call(this, context);\n        this.validator = validator.$get(context);\n    }\n    Ringout.prototype.createUrl = function (options, id) {\n        options = options || {};\n        return '/account/~/extension/' + (options.extensionId || '~') + '/ringout' + (id ? '/' + id : '');\n    };\n    Ringout.prototype.resetAsNew = function (object) {\n        object = _super.prototype.resetAsNew.call(this, object);\n        if (object) {\n            delete object.status;\n        }\n        return object;\n    };\n    Ringout.prototype.isInProgress = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'InProgress';\n    };\n    Ringout.prototype.isSuccess = function (ringout) {\n        return ringout && !this.isNew(ringout) && ringout.status && ringout.status.callStatus == 'Success';\n    };\n    Ringout.prototype.isError = function (ringout) {\n        return !this.isNew(ringout) && !this.isInProgress(ringout) && !this.isSuccess(ringout);\n    };\n    Ringout.prototype.validate = function (item) {\n        return this.validator.validate([\n            { field: 'to', validator: this.validator.required(item && item.to && item.to.phoneNumber) },\n            { field: 'from', validator: this.validator.required(item && item.from && item.from.phoneNumber) }\n        ]);\n    };\n    return Ringout;\n})(helper.Helper);\nexports.Ringout = Ringout;\nfunction $get(context) {\n    return context.createSingleton('Ringout', function () {\n        return new Ringout(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Ringout.ts\n ** module id = 37\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Service = (function (_super) {\n    __extends(Service, _super);\n    function Service() {\n        _super.apply(this, arguments);\n        this.isSmsEnabled = this.isServiceFeatureEnabledMethod('SMS');\n        this.isSmsReceivingEnabled = this.isServiceFeatureEnabledMethod('SMSReceiving');\n        this.isPresenceEnabled = this.isServiceFeatureEnabledMethod('Presence');\n        this.isRingOutEnabled = this.isServiceFeatureEnabledMethod('RingOut');\n        this.isInternationalCallingEnabled = this.isServiceFeatureEnabledMethod('InternationalCalling');\n        this.isDndEnabled = this.isServiceFeatureEnabledMethod('DND');\n        this.isFaxEnabled = this.isServiceFeatureEnabledMethod('Fax');\n        this.isFaxReceivingEnabled = this.isServiceFeatureEnabledMethod('FaxReceiving');\n        this.isVoicemailEnabled = this.isServiceFeatureEnabledMethod('Voicemail');\n        this.isPagerEnabled = this.isServiceFeatureEnabledMethod('Pager');\n        this.isPagerReceivingEnabled = this.isServiceFeatureEnabledMethod('PagerReceiving');\n        this.isVoipCallingEnabled = this.isServiceFeatureEnabledMethod('VoipCalling');\n        this.isVideoConferencingEnabled = this.isServiceFeatureEnabledMethod('VideoConferencing');\n        this.isSalesForceEnabled = this.isServiceFeatureEnabledMethod('SalesForce');\n        this.isIntercomEnabled = this.isServiceFeatureEnabledMethod('Intercom');\n        this.isPagingEnabled = this.isServiceFeatureEnabledMethod('Paging');\n        this.isConferencingEnabled = this.isServiceFeatureEnabledMethod('Conferencing');\n        this.isFreeSoftPhoneLinesEnabled = this.isServiceFeatureEnabledMethod('FreeSoftPhoneLines');\n        this.isHipaaComplianceEnabled = this.isServiceFeatureEnabledMethod('HipaaCompliance');\n        this.isCallParkEnabled = this.isServiceFeatureEnabledMethod('CallPark');\n        this.isOnDemandCallRecordingEnabled = this.isServiceFeatureEnabledMethod('OnDemandCallRecording');\n    }\n    Service.prototype.createUrl = function () {\n        return '/account/~/service-info';\n    };\n    Service.prototype.isEnabled = function (feature, serviceFeatures) {\n        return serviceFeatures.reduce(function (value, f) {\n            if (f.featureName == feature)\n                value = f.enabled;\n            return value;\n        }, false);\n    };\n    Service.prototype.isServiceFeatureEnabledMethod = function (feature) {\n        var _this = this;\n        return function (serviceFeatures) {\n            return _this.isEnabled(feature, serviceFeatures);\n        };\n    };\n    return Service;\n})(helper.Helper);\nexports.Service = Service;\nfunction $get(context) {\n    return context.createSingleton('Service', function () {\n        return new Service(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Service.ts\n ** module id = 38\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar ShippingMethod = (function (_super) {\n    __extends(ShippingMethod, _super);\n    function ShippingMethod() {\n        _super.apply(this, arguments);\n    }\n    /**\n     * TODO Add or describe options http://jira.ringcentral.com/browse/SDK-3 id done\n     */\n    ShippingMethod.prototype.createUrl = function () {\n        return '/dictionary/shipping-options';\n    };\n    return ShippingMethod;\n})(helper.Helper);\nexports.ShippingMethod = ShippingMethod;\nfunction $get(context) {\n    return context.createSingleton('ShippingMethod', function () {\n        return new ShippingMethod(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/ShippingMethod.ts\n ** module id = 39\n ** module chunks = 0\n **/","/// <reference path=\"../../typings/externals.d.ts\" />\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar helper = require('../core/Helper');\nvar Timezone = (function (_super) {\n    __extends(Timezone, _super);\n    function Timezone() {\n        _super.apply(this, arguments);\n    }\n    Timezone.prototype.createUrl = function () {\n        return '/dictionary/timezone';\n    };\n    return Timezone;\n})(helper.Helper);\nexports.Timezone = Timezone;\nfunction $get(context) {\n    return context.createSingleton('Timezone', function () {\n        return new Timezone(context);\n    });\n}\nexports.$get = $get;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/lib/helpers/Timezone.ts\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"es6-promise\",\"commonjs\":\"es6-promise\",\"commonjs2\":\"es6-promise\",\"root\":\"Promise\"}\n ** module id = 41\n ** module chunks = 0 1\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"pubnub\",\"commonjs\":\"pubnub\",\"commonjs2\":\"pubnub\",\"root\":\"PUBNUB\"}\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"dom-storage\",\"commonjs2\":\"dom-storage\",\"root\":\"localStorage\"}\n ** module id = 43\n ** module chunks = 0\n **/","if(typeof __WEBPACK_EXTERNAL_MODULE_44__ === 'undefined') {var e = new Error(\"Cannot find module \\\"undefined\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"exports\",\"commonjs\":\"xhr2\",\"commonjs2\":\"xhr2\",\"root\":\"XMLHttpRequest\"}\n ** module id = 44\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}